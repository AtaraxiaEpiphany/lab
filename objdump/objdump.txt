
fault:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 9a 2f 00 00    	pushq  0x2f9a(%rip)        # 3fc0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 9b 2f 00 00 	bnd jmpq *0x2f9b(%rip)        # 3fc8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop

Disassembly of section .plt.got:

0000000000001040 <__cxa_finalize@plt>:
    1040:	f3 0f 1e fa          	endbr64 
    1044:	f2 ff 25 ad 2f 00 00 	bnd jmpq *0x2fad(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    104b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001050 <__stack_chk_fail@plt>:
    1050:	f3 0f 1e fa          	endbr64 
    1054:	f2 ff 25 75 2f 00 00 	bnd jmpq *0x2f75(%rip)        # 3fd0 <__stack_chk_fail@GLIBC_2.4>
    105b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001060 <_start>:
    1060:	f3 0f 1e fa          	endbr64 
    1064:	31 ed                	xor    %ebp,%ebp
    1066:	49 89 d1             	mov    %rdx,%r9
    1069:	5e                   	pop    %rsi
    106a:	48 89 e2             	mov    %rsp,%rdx
    106d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1071:	50                   	push   %rax
    1072:	54                   	push   %rsp
    1073:	4c 8d 05 96 01 00 00 	lea    0x196(%rip),%r8        # 1210 <__libc_csu_fini>
    107a:	48 8d 0d 1f 01 00 00 	lea    0x11f(%rip),%rcx        # 11a0 <__libc_csu_init>
    1081:	48 8d 3d c1 00 00 00 	lea    0xc1(%rip),%rdi        # 1149 <main>
    1088:	ff 15 52 2f 00 00    	callq  *0x2f52(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    108e:	f4                   	hlt    
    108f:	90                   	nop

0000000000001090 <deregister_tm_clones>:
    1090:	48 8d 3d 79 2f 00 00 	lea    0x2f79(%rip),%rdi        # 4010 <__TMC_END__>
    1097:	48 8d 05 72 2f 00 00 	lea    0x2f72(%rip),%rax        # 4010 <__TMC_END__>
    109e:	48 39 f8             	cmp    %rdi,%rax
    10a1:	74 15                	je     10b8 <deregister_tm_clones+0x28>
    10a3:	48 8b 05 2e 2f 00 00 	mov    0x2f2e(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    10aa:	48 85 c0             	test   %rax,%rax
    10ad:	74 09                	je     10b8 <deregister_tm_clones+0x28>
    10af:	ff e0                	jmpq   *%rax
    10b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10b8:	c3                   	retq   
    10b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010c0 <register_tm_clones>:
    10c0:	48 8d 3d 49 2f 00 00 	lea    0x2f49(%rip),%rdi        # 4010 <__TMC_END__>
    10c7:	48 8d 35 42 2f 00 00 	lea    0x2f42(%rip),%rsi        # 4010 <__TMC_END__>
    10ce:	48 29 fe             	sub    %rdi,%rsi
    10d1:	48 89 f0             	mov    %rsi,%rax
    10d4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    10d8:	48 c1 f8 03          	sar    $0x3,%rax
    10dc:	48 01 c6             	add    %rax,%rsi
    10df:	48 d1 fe             	sar    %rsi
    10e2:	74 14                	je     10f8 <register_tm_clones+0x38>
    10e4:	48 8b 05 05 2f 00 00 	mov    0x2f05(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    10eb:	48 85 c0             	test   %rax,%rax
    10ee:	74 08                	je     10f8 <register_tm_clones+0x38>
    10f0:	ff e0                	jmpq   *%rax
    10f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    10f8:	c3                   	retq   
    10f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001100 <__do_global_dtors_aux>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	80 3d 05 2f 00 00 00 	cmpb   $0x0,0x2f05(%rip)        # 4010 <__TMC_END__>
    110b:	75 2b                	jne    1138 <__do_global_dtors_aux+0x38>
    110d:	55                   	push   %rbp
    110e:	48 83 3d e2 2e 00 00 	cmpq   $0x0,0x2ee2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1115:	00 
    1116:	48 89 e5             	mov    %rsp,%rbp
    1119:	74 0c                	je     1127 <__do_global_dtors_aux+0x27>
    111b:	48 8b 3d e6 2e 00 00 	mov    0x2ee6(%rip),%rdi        # 4008 <__dso_handle>
    1122:	e8 19 ff ff ff       	callq  1040 <__cxa_finalize@plt>
    1127:	e8 64 ff ff ff       	callq  1090 <deregister_tm_clones>
    112c:	c6 05 dd 2e 00 00 01 	movb   $0x1,0x2edd(%rip)        # 4010 <__TMC_END__>
    1133:	5d                   	pop    %rbp
    1134:	c3                   	retq   
    1135:	0f 1f 00             	nopl   (%rax)
    1138:	c3                   	retq   
    1139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001140 <frame_dummy>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	e9 77 ff ff ff       	jmpq   10c0 <register_tm_clones>

0000000000001149 <main>:
    1149:	f3 0f 1e fa          	endbr64 
    114d:	55                   	push   %rbp
    114e:	48 89 e5             	mov    %rsp,%rbp
    1151:	48 81 ec b0 0f 00 00 	sub    $0xfb0,%rsp
    1158:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    115f:	00 00 
    1161:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1165:	31 c0                	xor    %eax,%eax
    1167:	c7 85 78 f0 ff ff 01 	movl   $0x1,-0xf88(%rbp)
    116e:	00 00 00 
    1171:	c7 45 f0 03 00 00 00 	movl   $0x3,-0x10(%rbp)
    1178:	c7 85 90 8c 00 00 04 	movl   $0x4,0x8c90(%rbp)
    117f:	00 00 00 
    1182:	b8 00 00 00 00       	mov    $0x0,%eax
    1187:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    118b:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
    1192:	00 00 
    1194:	74 05                	je     119b <main+0x52>
    1196:	e8 b5 fe ff ff       	callq  1050 <__stack_chk_fail@plt>
    119b:	c9                   	leaveq 
    119c:	c3                   	retq   
    119d:	0f 1f 00             	nopl   (%rax)

00000000000011a0 <__libc_csu_init>:
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	41 57                	push   %r15
    11a6:	4c 8d 3d 0b 2c 00 00 	lea    0x2c0b(%rip),%r15        # 3db8 <__frame_dummy_init_array_entry>
    11ad:	41 56                	push   %r14
    11af:	49 89 d6             	mov    %rdx,%r14
    11b2:	41 55                	push   %r13
    11b4:	49 89 f5             	mov    %rsi,%r13
    11b7:	41 54                	push   %r12
    11b9:	41 89 fc             	mov    %edi,%r12d
    11bc:	55                   	push   %rbp
    11bd:	48 8d 2d fc 2b 00 00 	lea    0x2bfc(%rip),%rbp        # 3dc0 <__do_global_dtors_aux_fini_array_entry>
    11c4:	53                   	push   %rbx
    11c5:	4c 29 fd             	sub    %r15,%rbp
    11c8:	48 83 ec 08          	sub    $0x8,%rsp
    11cc:	e8 2f fe ff ff       	callq  1000 <_init>
    11d1:	48 c1 fd 03          	sar    $0x3,%rbp
    11d5:	74 1f                	je     11f6 <__libc_csu_init+0x56>
    11d7:	31 db                	xor    %ebx,%ebx
    11d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    11e0:	4c 89 f2             	mov    %r14,%rdx
    11e3:	4c 89 ee             	mov    %r13,%rsi
    11e6:	44 89 e7             	mov    %r12d,%edi
    11e9:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    11ed:	48 83 c3 01          	add    $0x1,%rbx
    11f1:	48 39 dd             	cmp    %rbx,%rbp
    11f4:	75 ea                	jne    11e0 <__libc_csu_init+0x40>
    11f6:	48 83 c4 08          	add    $0x8,%rsp
    11fa:	5b                   	pop    %rbx
    11fb:	5d                   	pop    %rbp
    11fc:	41 5c                	pop    %r12
    11fe:	41 5d                	pop    %r13
    1200:	41 5e                	pop    %r14
    1202:	41 5f                	pop    %r15
    1204:	c3                   	retq   
    1205:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    120c:	00 00 00 00 

0000000000001210 <__libc_csu_fini>:
    1210:	f3 0f 1e fa          	endbr64 
    1214:	c3                   	retq   

Disassembly of section .fini:

0000000000001218 <_fini>:
    1218:	f3 0f 1e fa          	endbr64 
    121c:	48 83 ec 08          	sub    $0x8,%rsp
    1220:	48 83 c4 08          	add    $0x8,%rsp
    1224:	c3                   	retq   
_______________________________________________________________

print:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 9a 2f 00 00    	pushq  0x2f9a(%rip)        # 3fc0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 9b 2f 00 00 	bnd jmpq *0x2f9b(%rip)        # 3fc8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop

Disassembly of section .plt.got:

0000000000001040 <__cxa_finalize@plt>:
    1040:	f3 0f 1e fa          	endbr64 
    1044:	f2 ff 25 ad 2f 00 00 	bnd jmpq *0x2fad(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    104b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001050 <putchar@plt>:
    1050:	f3 0f 1e fa          	endbr64 
    1054:	f2 ff 25 75 2f 00 00 	bnd jmpq *0x2f75(%rip)        # 3fd0 <putchar@GLIBC_2.2.5>
    105b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001060 <_start>:
    1060:	f3 0f 1e fa          	endbr64 
    1064:	31 ed                	xor    %ebp,%ebp
    1066:	49 89 d1             	mov    %rdx,%r9
    1069:	5e                   	pop    %rsi
    106a:	48 89 e2             	mov    %rsp,%rdx
    106d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1071:	50                   	push   %rax
    1072:	54                   	push   %rsp
    1073:	4c 8d 05 a6 01 00 00 	lea    0x1a6(%rip),%r8        # 1220 <__libc_csu_fini>
    107a:	48 8d 0d 2f 01 00 00 	lea    0x12f(%rip),%rcx        # 11b0 <__libc_csu_init>
    1081:	48 8d 3d c1 00 00 00 	lea    0xc1(%rip),%rdi        # 1149 <main>
    1088:	ff 15 52 2f 00 00    	callq  *0x2f52(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    108e:	f4                   	hlt    
    108f:	90                   	nop

0000000000001090 <deregister_tm_clones>:
    1090:	48 8d 3d 79 2f 00 00 	lea    0x2f79(%rip),%rdi        # 4010 <__TMC_END__>
    1097:	48 8d 05 72 2f 00 00 	lea    0x2f72(%rip),%rax        # 4010 <__TMC_END__>
    109e:	48 39 f8             	cmp    %rdi,%rax
    10a1:	74 15                	je     10b8 <deregister_tm_clones+0x28>
    10a3:	48 8b 05 2e 2f 00 00 	mov    0x2f2e(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    10aa:	48 85 c0             	test   %rax,%rax
    10ad:	74 09                	je     10b8 <deregister_tm_clones+0x28>
    10af:	ff e0                	jmpq   *%rax
    10b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10b8:	c3                   	retq   
    10b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010c0 <register_tm_clones>:
    10c0:	48 8d 3d 49 2f 00 00 	lea    0x2f49(%rip),%rdi        # 4010 <__TMC_END__>
    10c7:	48 8d 35 42 2f 00 00 	lea    0x2f42(%rip),%rsi        # 4010 <__TMC_END__>
    10ce:	48 29 fe             	sub    %rdi,%rsi
    10d1:	48 89 f0             	mov    %rsi,%rax
    10d4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    10d8:	48 c1 f8 03          	sar    $0x3,%rax
    10dc:	48 01 c6             	add    %rax,%rsi
    10df:	48 d1 fe             	sar    %rsi
    10e2:	74 14                	je     10f8 <register_tm_clones+0x38>
    10e4:	48 8b 05 05 2f 00 00 	mov    0x2f05(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    10eb:	48 85 c0             	test   %rax,%rax
    10ee:	74 08                	je     10f8 <register_tm_clones+0x38>
    10f0:	ff e0                	jmpq   *%rax
    10f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    10f8:	c3                   	retq   
    10f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001100 <__do_global_dtors_aux>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	80 3d 05 2f 00 00 00 	cmpb   $0x0,0x2f05(%rip)        # 4010 <__TMC_END__>
    110b:	75 2b                	jne    1138 <__do_global_dtors_aux+0x38>
    110d:	55                   	push   %rbp
    110e:	48 83 3d e2 2e 00 00 	cmpq   $0x0,0x2ee2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1115:	00 
    1116:	48 89 e5             	mov    %rsp,%rbp
    1119:	74 0c                	je     1127 <__do_global_dtors_aux+0x27>
    111b:	48 8b 3d e6 2e 00 00 	mov    0x2ee6(%rip),%rdi        # 4008 <__dso_handle>
    1122:	e8 19 ff ff ff       	callq  1040 <__cxa_finalize@plt>
    1127:	e8 64 ff ff ff       	callq  1090 <deregister_tm_clones>
    112c:	c6 05 dd 2e 00 00 01 	movb   $0x1,0x2edd(%rip)        # 4010 <__TMC_END__>
    1133:	5d                   	pop    %rbp
    1134:	c3                   	retq   
    1135:	0f 1f 00             	nopl   (%rax)
    1138:	c3                   	retq   
    1139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001140 <frame_dummy>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	e9 77 ff ff ff       	jmpq   10c0 <register_tm_clones>

0000000000001149 <main>:
    1149:	f3 0f 1e fa          	endbr64 
    114d:	55                   	push   %rbp
    114e:	48 89 e5             	mov    %rsp,%rbp
    1151:	48 83 ec 10          	sub    $0x10,%rsp
    1155:	c7 45 fc 0a 00 00 00 	movl   $0xa,-0x4(%rbp)
    115c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1163:	eb 2d                	jmp    1192 <main+0x49>
    1165:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    116c:	eb 0e                	jmp    117c <main+0x33>
    116e:	bf 2a 00 00 00       	mov    $0x2a,%edi
    1173:	e8 d8 fe ff ff       	callq  1050 <putchar@plt>
    1178:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    117c:	8b 45 f8             	mov    -0x8(%rbp),%eax
    117f:	3b 45 fc             	cmp    -0x4(%rbp),%eax
    1182:	7c ea                	jl     116e <main+0x25>
    1184:	bf 0a 00 00 00       	mov    $0xa,%edi
    1189:	e8 c2 fe ff ff       	callq  1050 <putchar@plt>
    118e:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    1192:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1195:	3b 45 fc             	cmp    -0x4(%rbp),%eax
    1198:	7c cb                	jl     1165 <main+0x1c>
    119a:	b8 00 00 00 00       	mov    $0x0,%eax
    119f:	c9                   	leaveq 
    11a0:	c3                   	retq   
    11a1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    11a8:	00 00 00 
    11ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011b0 <__libc_csu_init>:
    11b0:	f3 0f 1e fa          	endbr64 
    11b4:	41 57                	push   %r15
    11b6:	4c 8d 3d fb 2b 00 00 	lea    0x2bfb(%rip),%r15        # 3db8 <__frame_dummy_init_array_entry>
    11bd:	41 56                	push   %r14
    11bf:	49 89 d6             	mov    %rdx,%r14
    11c2:	41 55                	push   %r13
    11c4:	49 89 f5             	mov    %rsi,%r13
    11c7:	41 54                	push   %r12
    11c9:	41 89 fc             	mov    %edi,%r12d
    11cc:	55                   	push   %rbp
    11cd:	48 8d 2d ec 2b 00 00 	lea    0x2bec(%rip),%rbp        # 3dc0 <__do_global_dtors_aux_fini_array_entry>
    11d4:	53                   	push   %rbx
    11d5:	4c 29 fd             	sub    %r15,%rbp
    11d8:	48 83 ec 08          	sub    $0x8,%rsp
    11dc:	e8 1f fe ff ff       	callq  1000 <_init>
    11e1:	48 c1 fd 03          	sar    $0x3,%rbp
    11e5:	74 1f                	je     1206 <__libc_csu_init+0x56>
    11e7:	31 db                	xor    %ebx,%ebx
    11e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    11f0:	4c 89 f2             	mov    %r14,%rdx
    11f3:	4c 89 ee             	mov    %r13,%rsi
    11f6:	44 89 e7             	mov    %r12d,%edi
    11f9:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    11fd:	48 83 c3 01          	add    $0x1,%rbx
    1201:	48 39 dd             	cmp    %rbx,%rbp
    1204:	75 ea                	jne    11f0 <__libc_csu_init+0x40>
    1206:	48 83 c4 08          	add    $0x8,%rsp
    120a:	5b                   	pop    %rbx
    120b:	5d                   	pop    %rbp
    120c:	41 5c                	pop    %r12
    120e:	41 5d                	pop    %r13
    1210:	41 5e                	pop    %r14
    1212:	41 5f                	pop    %r15
    1214:	c3                   	retq   
    1215:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    121c:	00 00 00 00 

0000000000001220 <__libc_csu_fini>:
    1220:	f3 0f 1e fa          	endbr64 
    1224:	c3                   	retq   

Disassembly of section .fini:

0000000000001228 <_fini>:
    1228:	f3 0f 1e fa          	endbr64 
    122c:	48 83 ec 08          	sub    $0x8,%rsp
    1230:	48 83 c4 08          	add    $0x8,%rsp
    1234:	c3                   	retq   
_______________________________________________________________

bit:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 a2 2f 00 00    	pushq  0x2fa2(%rip)        # 3fc8 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 a3 2f 00 00 	bnd jmpq *0x2fa3(%rip)        # 3fd0 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)

Disassembly of section .plt.got:

0000000000001030 <__cxa_finalize@plt>:
    1030:	f3 0f 1e fa          	endbr64 
    1034:	f2 ff 25 bd 2f 00 00 	bnd jmpq *0x2fbd(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    103b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001040 <_start>:
    1040:	f3 0f 1e fa          	endbr64 
    1044:	31 ed                	xor    %ebp,%ebp
    1046:	49 89 d1             	mov    %rdx,%r9
    1049:	5e                   	pop    %rsi
    104a:	48 89 e2             	mov    %rsp,%rdx
    104d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1051:	50                   	push   %rax
    1052:	54                   	push   %rsp
    1053:	4c 8d 05 96 01 00 00 	lea    0x196(%rip),%r8        # 11f0 <__libc_csu_fini>
    105a:	48 8d 0d 1f 01 00 00 	lea    0x11f(%rip),%rcx        # 1180 <__libc_csu_init>
    1061:	48 8d 3d c1 00 00 00 	lea    0xc1(%rip),%rdi        # 1129 <main>
    1068:	ff 15 72 2f 00 00    	callq  *0x2f72(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    106e:	f4                   	hlt    
    106f:	90                   	nop

0000000000001070 <deregister_tm_clones>:
    1070:	48 8d 3d 99 2f 00 00 	lea    0x2f99(%rip),%rdi        # 4010 <__TMC_END__>
    1077:	48 8d 05 92 2f 00 00 	lea    0x2f92(%rip),%rax        # 4010 <__TMC_END__>
    107e:	48 39 f8             	cmp    %rdi,%rax
    1081:	74 15                	je     1098 <deregister_tm_clones+0x28>
    1083:	48 8b 05 4e 2f 00 00 	mov    0x2f4e(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    108a:	48 85 c0             	test   %rax,%rax
    108d:	74 09                	je     1098 <deregister_tm_clones+0x28>
    108f:	ff e0                	jmpq   *%rax
    1091:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1098:	c3                   	retq   
    1099:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010a0 <register_tm_clones>:
    10a0:	48 8d 3d 69 2f 00 00 	lea    0x2f69(%rip),%rdi        # 4010 <__TMC_END__>
    10a7:	48 8d 35 62 2f 00 00 	lea    0x2f62(%rip),%rsi        # 4010 <__TMC_END__>
    10ae:	48 29 fe             	sub    %rdi,%rsi
    10b1:	48 89 f0             	mov    %rsi,%rax
    10b4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    10b8:	48 c1 f8 03          	sar    $0x3,%rax
    10bc:	48 01 c6             	add    %rax,%rsi
    10bf:	48 d1 fe             	sar    %rsi
    10c2:	74 14                	je     10d8 <register_tm_clones+0x38>
    10c4:	48 8b 05 25 2f 00 00 	mov    0x2f25(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    10cb:	48 85 c0             	test   %rax,%rax
    10ce:	74 08                	je     10d8 <register_tm_clones+0x38>
    10d0:	ff e0                	jmpq   *%rax
    10d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    10d8:	c3                   	retq   
    10d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010e0 <__do_global_dtors_aux>:
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	80 3d 25 2f 00 00 00 	cmpb   $0x0,0x2f25(%rip)        # 4010 <__TMC_END__>
    10eb:	75 2b                	jne    1118 <__do_global_dtors_aux+0x38>
    10ed:	55                   	push   %rbp
    10ee:	48 83 3d 02 2f 00 00 	cmpq   $0x0,0x2f02(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    10f5:	00 
    10f6:	48 89 e5             	mov    %rsp,%rbp
    10f9:	74 0c                	je     1107 <__do_global_dtors_aux+0x27>
    10fb:	48 8b 3d 06 2f 00 00 	mov    0x2f06(%rip),%rdi        # 4008 <__dso_handle>
    1102:	e8 29 ff ff ff       	callq  1030 <__cxa_finalize@plt>
    1107:	e8 64 ff ff ff       	callq  1070 <deregister_tm_clones>
    110c:	c6 05 fd 2e 00 00 01 	movb   $0x1,0x2efd(%rip)        # 4010 <__TMC_END__>
    1113:	5d                   	pop    %rbp
    1114:	c3                   	retq   
    1115:	0f 1f 00             	nopl   (%rax)
    1118:	c3                   	retq   
    1119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001120 <frame_dummy>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	e9 77 ff ff ff       	jmpq   10a0 <register_tm_clones>

0000000000001129 <main>:
    1129:	f3 0f 1e fa          	endbr64 
    112d:	55                   	push   %rbp
    112e:	48 89 e5             	mov    %rsp,%rbp
    1131:	c7 45 f4 05 00 00 00 	movl   $0x5,-0xc(%rbp)
    1138:	c7 45 f8 03 00 00 00 	movl   $0x3,-0x8(%rbp)
    113f:	66 c7 45 f2 05 00    	movw   $0x5,-0xe(%rbp)
    1145:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    114c:	f7 55 f4             	notl   -0xc(%rbp)
    114f:	f7 55 f8             	notl   -0x8(%rbp)
    1152:	66 f7 55 f2          	notw   -0xe(%rbp)
    1156:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1159:	23 45 f8             	and    -0x8(%rbp),%eax
    115c:	89 45 fc             	mov    %eax,-0x4(%rbp)
    115f:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1162:	33 45 f8             	xor    -0x8(%rbp),%eax
    1165:	89 45 fc             	mov    %eax,-0x4(%rbp)
    1168:	8b 45 f4             	mov    -0xc(%rbp),%eax
    116b:	0b 45 f8             	or     -0x8(%rbp),%eax
    116e:	89 45 fc             	mov    %eax,-0x4(%rbp)
    1171:	b8 00 00 00 00       	mov    $0x0,%eax
    1176:	5d                   	pop    %rbp
    1177:	c3                   	retq   
    1178:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    117f:	00 

0000000000001180 <__libc_csu_init>:
    1180:	f3 0f 1e fa          	endbr64 
    1184:	41 57                	push   %r15
    1186:	4c 8d 3d 63 2c 00 00 	lea    0x2c63(%rip),%r15        # 3df0 <__frame_dummy_init_array_entry>
    118d:	41 56                	push   %r14
    118f:	49 89 d6             	mov    %rdx,%r14
    1192:	41 55                	push   %r13
    1194:	49 89 f5             	mov    %rsi,%r13
    1197:	41 54                	push   %r12
    1199:	41 89 fc             	mov    %edi,%r12d
    119c:	55                   	push   %rbp
    119d:	48 8d 2d 54 2c 00 00 	lea    0x2c54(%rip),%rbp        # 3df8 <__do_global_dtors_aux_fini_array_entry>
    11a4:	53                   	push   %rbx
    11a5:	4c 29 fd             	sub    %r15,%rbp
    11a8:	48 83 ec 08          	sub    $0x8,%rsp
    11ac:	e8 4f fe ff ff       	callq  1000 <_init>
    11b1:	48 c1 fd 03          	sar    $0x3,%rbp
    11b5:	74 1f                	je     11d6 <__libc_csu_init+0x56>
    11b7:	31 db                	xor    %ebx,%ebx
    11b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    11c0:	4c 89 f2             	mov    %r14,%rdx
    11c3:	4c 89 ee             	mov    %r13,%rsi
    11c6:	44 89 e7             	mov    %r12d,%edi
    11c9:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    11cd:	48 83 c3 01          	add    $0x1,%rbx
    11d1:	48 39 dd             	cmp    %rbx,%rbp
    11d4:	75 ea                	jne    11c0 <__libc_csu_init+0x40>
    11d6:	48 83 c4 08          	add    $0x8,%rsp
    11da:	5b                   	pop    %rbx
    11db:	5d                   	pop    %rbp
    11dc:	41 5c                	pop    %r12
    11de:	41 5d                	pop    %r13
    11e0:	41 5e                	pop    %r14
    11e2:	41 5f                	pop    %r15
    11e4:	c3                   	retq   
    11e5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    11ec:	00 00 00 00 

00000000000011f0 <__libc_csu_fini>:
    11f0:	f3 0f 1e fa          	endbr64 
    11f4:	c3                   	retq   

Disassembly of section .fini:

00000000000011f8 <_fini>:
    11f8:	f3 0f 1e fa          	endbr64 
    11fc:	48 83 ec 08          	sub    $0x8,%rsp
    1200:	48 83 c4 08          	add    $0x8,%rsp
    1204:	c3                   	retq   
_______________________________________________________________

buf:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 9a 2f 00 00    	pushq  0x2f9a(%rip)        # 3fc0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 9b 2f 00 00 	bnd jmpq *0x2f9b(%rip)        # 3fc8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop

Disassembly of section .plt.got:

0000000000001040 <__cxa_finalize@plt>:
    1040:	f3 0f 1e fa          	endbr64 
    1044:	f2 ff 25 ad 2f 00 00 	bnd jmpq *0x2fad(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    104b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001050 <fwrite@plt>:
    1050:	f3 0f 1e fa          	endbr64 
    1054:	f2 ff 25 75 2f 00 00 	bnd jmpq *0x2f75(%rip)        # 3fd0 <fwrite@GLIBC_2.2.5>
    105b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001060 <_start>:
    1060:	f3 0f 1e fa          	endbr64 
    1064:	31 ed                	xor    %ebp,%ebp
    1066:	49 89 d1             	mov    %rdx,%r9
    1069:	5e                   	pop    %rsi
    106a:	48 89 e2             	mov    %rsp,%rdx
    106d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1071:	50                   	push   %rax
    1072:	54                   	push   %rsp
    1073:	4c 8d 05 96 01 00 00 	lea    0x196(%rip),%r8        # 1210 <__libc_csu_fini>
    107a:	48 8d 0d 1f 01 00 00 	lea    0x11f(%rip),%rcx        # 11a0 <__libc_csu_init>
    1081:	48 8d 3d c1 00 00 00 	lea    0xc1(%rip),%rdi        # 1149 <main>
    1088:	ff 15 52 2f 00 00    	callq  *0x2f52(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    108e:	f4                   	hlt    
    108f:	90                   	nop

0000000000001090 <deregister_tm_clones>:
    1090:	48 8d 3d 79 2f 00 00 	lea    0x2f79(%rip),%rdi        # 4010 <__TMC_END__>
    1097:	48 8d 05 72 2f 00 00 	lea    0x2f72(%rip),%rax        # 4010 <__TMC_END__>
    109e:	48 39 f8             	cmp    %rdi,%rax
    10a1:	74 15                	je     10b8 <deregister_tm_clones+0x28>
    10a3:	48 8b 05 2e 2f 00 00 	mov    0x2f2e(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    10aa:	48 85 c0             	test   %rax,%rax
    10ad:	74 09                	je     10b8 <deregister_tm_clones+0x28>
    10af:	ff e0                	jmpq   *%rax
    10b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10b8:	c3                   	retq   
    10b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010c0 <register_tm_clones>:
    10c0:	48 8d 3d 49 2f 00 00 	lea    0x2f49(%rip),%rdi        # 4010 <__TMC_END__>
    10c7:	48 8d 35 42 2f 00 00 	lea    0x2f42(%rip),%rsi        # 4010 <__TMC_END__>
    10ce:	48 29 fe             	sub    %rdi,%rsi
    10d1:	48 89 f0             	mov    %rsi,%rax
    10d4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    10d8:	48 c1 f8 03          	sar    $0x3,%rax
    10dc:	48 01 c6             	add    %rax,%rsi
    10df:	48 d1 fe             	sar    %rsi
    10e2:	74 14                	je     10f8 <register_tm_clones+0x38>
    10e4:	48 8b 05 05 2f 00 00 	mov    0x2f05(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    10eb:	48 85 c0             	test   %rax,%rax
    10ee:	74 08                	je     10f8 <register_tm_clones+0x38>
    10f0:	ff e0                	jmpq   *%rax
    10f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    10f8:	c3                   	retq   
    10f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001100 <__do_global_dtors_aux>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	80 3d 3d 2f 00 00 00 	cmpb   $0x0,0x2f3d(%rip)        # 4048 <completed.8061>
    110b:	75 2b                	jne    1138 <__do_global_dtors_aux+0x38>
    110d:	55                   	push   %rbp
    110e:	48 83 3d e2 2e 00 00 	cmpq   $0x0,0x2ee2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1115:	00 
    1116:	48 89 e5             	mov    %rsp,%rbp
    1119:	74 0c                	je     1127 <__do_global_dtors_aux+0x27>
    111b:	48 8b 3d e6 2e 00 00 	mov    0x2ee6(%rip),%rdi        # 4008 <__dso_handle>
    1122:	e8 19 ff ff ff       	callq  1040 <__cxa_finalize@plt>
    1127:	e8 64 ff ff ff       	callq  1090 <deregister_tm_clones>
    112c:	c6 05 15 2f 00 00 01 	movb   $0x1,0x2f15(%rip)        # 4048 <completed.8061>
    1133:	5d                   	pop    %rbp
    1134:	c3                   	retq   
    1135:	0f 1f 00             	nopl   (%rax)
    1138:	c3                   	retq   
    1139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001140 <frame_dummy>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	e9 77 ff ff ff       	jmpq   10c0 <register_tm_clones>

0000000000001149 <main>:
    1149:	f3 0f 1e fa          	endbr64 
    114d:	55                   	push   %rbp
    114e:	48 89 e5             	mov    %rsp,%rbp
    1151:	48 8b 05 c8 2e 00 00 	mov    0x2ec8(%rip),%rax        # 4020 <stdout@@GLIBC_2.2.5>
    1158:	48 89 c1             	mov    %rax,%rcx
    115b:	ba 05 00 00 00       	mov    $0x5,%edx
    1160:	be 01 00 00 00       	mov    $0x1,%esi
    1165:	48 8d 3d 98 0e 00 00 	lea    0xe98(%rip),%rdi        # 2004 <_IO_stdin_used+0x4>
    116c:	e8 df fe ff ff       	callq  1050 <fwrite@plt>
    1171:	48 8b 05 c8 2e 00 00 	mov    0x2ec8(%rip),%rax        # 4040 <stderr@@GLIBC_2.2.5>
    1178:	48 89 c1             	mov    %rax,%rcx
    117b:	ba 05 00 00 00       	mov    $0x5,%edx
    1180:	be 01 00 00 00       	mov    $0x1,%esi
    1185:	48 8d 3d 7e 0e 00 00 	lea    0xe7e(%rip),%rdi        # 200a <_IO_stdin_used+0xa>
    118c:	e8 bf fe ff ff       	callq  1050 <fwrite@plt>
    1191:	b8 00 00 00 00       	mov    $0x0,%eax
    1196:	5d                   	pop    %rbp
    1197:	c3                   	retq   
    1198:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    119f:	00 

00000000000011a0 <__libc_csu_init>:
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	41 57                	push   %r15
    11a6:	4c 8d 3d 0b 2c 00 00 	lea    0x2c0b(%rip),%r15        # 3db8 <__frame_dummy_init_array_entry>
    11ad:	41 56                	push   %r14
    11af:	49 89 d6             	mov    %rdx,%r14
    11b2:	41 55                	push   %r13
    11b4:	49 89 f5             	mov    %rsi,%r13
    11b7:	41 54                	push   %r12
    11b9:	41 89 fc             	mov    %edi,%r12d
    11bc:	55                   	push   %rbp
    11bd:	48 8d 2d fc 2b 00 00 	lea    0x2bfc(%rip),%rbp        # 3dc0 <__do_global_dtors_aux_fini_array_entry>
    11c4:	53                   	push   %rbx
    11c5:	4c 29 fd             	sub    %r15,%rbp
    11c8:	48 83 ec 08          	sub    $0x8,%rsp
    11cc:	e8 2f fe ff ff       	callq  1000 <_init>
    11d1:	48 c1 fd 03          	sar    $0x3,%rbp
    11d5:	74 1f                	je     11f6 <__libc_csu_init+0x56>
    11d7:	31 db                	xor    %ebx,%ebx
    11d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    11e0:	4c 89 f2             	mov    %r14,%rdx
    11e3:	4c 89 ee             	mov    %r13,%rsi
    11e6:	44 89 e7             	mov    %r12d,%edi
    11e9:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    11ed:	48 83 c3 01          	add    $0x1,%rbx
    11f1:	48 39 dd             	cmp    %rbx,%rbp
    11f4:	75 ea                	jne    11e0 <__libc_csu_init+0x40>
    11f6:	48 83 c4 08          	add    $0x8,%rsp
    11fa:	5b                   	pop    %rbx
    11fb:	5d                   	pop    %rbp
    11fc:	41 5c                	pop    %r12
    11fe:	41 5d                	pop    %r13
    1200:	41 5e                	pop    %r14
    1202:	41 5f                	pop    %r15
    1204:	c3                   	retq   
    1205:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    120c:	00 00 00 00 

0000000000001210 <__libc_csu_fini>:
    1210:	f3 0f 1e fa          	endbr64 
    1214:	c3                   	retq   

Disassembly of section .fini:

0000000000001218 <_fini>:
    1218:	f3 0f 1e fa          	endbr64 
    121c:	48 83 ec 08          	sub    $0x8,%rsp
    1220:	48 83 c4 08          	add    $0x8,%rsp
    1224:	c3                   	retq   
_______________________________________________________________

persistence:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 82 2f 00 00    	pushq  0x2f82(%rip)        # 3fa8 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 83 2f 00 00 	bnd jmpq *0x2f83(%rip)        # 3fb0 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	pushq  $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmpq 1020 <.plt>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	pushq  $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmpq 1020 <.plt>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	pushq  $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmpq 1020 <.plt>
    106f:	90                   	nop

Disassembly of section .plt.got:

0000000000001070 <__cxa_finalize@plt>:
    1070:	f3 0f 1e fa          	endbr64 
    1074:	f2 ff 25 7d 2f 00 00 	bnd jmpq *0x2f7d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    107b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001080 <write@plt>:
    1080:	f3 0f 1e fa          	endbr64 
    1084:	f2 ff 25 2d 2f 00 00 	bnd jmpq *0x2f2d(%rip)        # 3fb8 <write@GLIBC_2.2.5>
    108b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001090 <__assert_fail@plt>:
    1090:	f3 0f 1e fa          	endbr64 
    1094:	f2 ff 25 25 2f 00 00 	bnd jmpq *0x2f25(%rip)        # 3fc0 <__assert_fail@GLIBC_2.2.5>
    109b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010a0 <close@plt>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	f2 ff 25 1d 2f 00 00 	bnd jmpq *0x2f1d(%rip)        # 3fc8 <close@GLIBC_2.2.5>
    10ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010b0 <open@plt>:
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	f2 ff 25 15 2f 00 00 	bnd jmpq *0x2f15(%rip)        # 3fd0 <open@GLIBC_2.2.5>
    10bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

00000000000010c0 <_start>:
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	31 ed                	xor    %ebp,%ebp
    10c6:	49 89 d1             	mov    %rdx,%r9
    10c9:	5e                   	pop    %rsi
    10ca:	48 89 e2             	mov    %rsp,%rdx
    10cd:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    10d1:	50                   	push   %rax
    10d2:	54                   	push   %rsp
    10d3:	4c 8d 05 e6 01 00 00 	lea    0x1e6(%rip),%r8        # 12c0 <__libc_csu_fini>
    10da:	48 8d 0d 6f 01 00 00 	lea    0x16f(%rip),%rcx        # 1250 <__libc_csu_init>
    10e1:	48 8d 3d c1 00 00 00 	lea    0xc1(%rip),%rdi        # 11a9 <main>
    10e8:	ff 15 f2 2e 00 00    	callq  *0x2ef2(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    10ee:	f4                   	hlt    
    10ef:	90                   	nop

00000000000010f0 <deregister_tm_clones>:
    10f0:	48 8d 3d 19 2f 00 00 	lea    0x2f19(%rip),%rdi        # 4010 <__TMC_END__>
    10f7:	48 8d 05 12 2f 00 00 	lea    0x2f12(%rip),%rax        # 4010 <__TMC_END__>
    10fe:	48 39 f8             	cmp    %rdi,%rax
    1101:	74 15                	je     1118 <deregister_tm_clones+0x28>
    1103:	48 8b 05 ce 2e 00 00 	mov    0x2ece(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    110a:	48 85 c0             	test   %rax,%rax
    110d:	74 09                	je     1118 <deregister_tm_clones+0x28>
    110f:	ff e0                	jmpq   *%rax
    1111:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1118:	c3                   	retq   
    1119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001120 <register_tm_clones>:
    1120:	48 8d 3d e9 2e 00 00 	lea    0x2ee9(%rip),%rdi        # 4010 <__TMC_END__>
    1127:	48 8d 35 e2 2e 00 00 	lea    0x2ee2(%rip),%rsi        # 4010 <__TMC_END__>
    112e:	48 29 fe             	sub    %rdi,%rsi
    1131:	48 89 f0             	mov    %rsi,%rax
    1134:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1138:	48 c1 f8 03          	sar    $0x3,%rax
    113c:	48 01 c6             	add    %rax,%rsi
    113f:	48 d1 fe             	sar    %rsi
    1142:	74 14                	je     1158 <register_tm_clones+0x38>
    1144:	48 8b 05 a5 2e 00 00 	mov    0x2ea5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    114b:	48 85 c0             	test   %rax,%rax
    114e:	74 08                	je     1158 <register_tm_clones+0x38>
    1150:	ff e0                	jmpq   *%rax
    1152:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1158:	c3                   	retq   
    1159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001160 <__do_global_dtors_aux>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	80 3d a5 2e 00 00 00 	cmpb   $0x0,0x2ea5(%rip)        # 4010 <__TMC_END__>
    116b:	75 2b                	jne    1198 <__do_global_dtors_aux+0x38>
    116d:	55                   	push   %rbp
    116e:	48 83 3d 82 2e 00 00 	cmpq   $0x0,0x2e82(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1175:	00 
    1176:	48 89 e5             	mov    %rsp,%rbp
    1179:	74 0c                	je     1187 <__do_global_dtors_aux+0x27>
    117b:	48 8b 3d 86 2e 00 00 	mov    0x2e86(%rip),%rdi        # 4008 <__dso_handle>
    1182:	e8 e9 fe ff ff       	callq  1070 <__cxa_finalize@plt>
    1187:	e8 64 ff ff ff       	callq  10f0 <deregister_tm_clones>
    118c:	c6 05 7d 2e 00 00 01 	movb   $0x1,0x2e7d(%rip)        # 4010 <__TMC_END__>
    1193:	5d                   	pop    %rbp
    1194:	c3                   	retq   
    1195:	0f 1f 00             	nopl   (%rax)
    1198:	c3                   	retq   
    1199:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011a0 <frame_dummy>:
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	e9 77 ff ff ff       	jmpq   1120 <register_tm_clones>

00000000000011a9 <main>:
    11a9:	f3 0f 1e fa          	endbr64 
    11ad:	55                   	push   %rbp
    11ae:	48 89 e5             	mov    %rsp,%rbp
    11b1:	48 83 ec 20          	sub    $0x20,%rsp
    11b5:	89 7d ec             	mov    %edi,-0x14(%rbp)
    11b8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    11bc:	ba c0 01 00 00       	mov    $0x1c0,%edx
    11c1:	be 41 02 00 00       	mov    $0x241,%esi
    11c6:	48 8d 3d 37 0e 00 00 	lea    0xe37(%rip),%rdi        # 2004 <_IO_stdin_used+0x4>
    11cd:	b8 00 00 00 00       	mov    $0x0,%eax
    11d2:	e8 d9 fe ff ff       	callq  10b0 <open@plt>
    11d7:	89 45 f8             	mov    %eax,-0x8(%rbp)
    11da:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
    11de:	79 1f                	jns    11ff <main+0x56>
    11e0:	48 8d 0d 53 0e 00 00 	lea    0xe53(%rip),%rcx        # 203a <__PRETTY_FUNCTION__.3160>
    11e7:	ba 09 00 00 00       	mov    $0x9,%edx
    11ec:	48 8d 35 1b 0e 00 00 	lea    0xe1b(%rip),%rsi        # 200e <_IO_stdin_used+0xe>
    11f3:	48 8d 3d 22 0e 00 00 	lea    0xe22(%rip),%rdi        # 201c <_IO_stdin_used+0x1c>
    11fa:	e8 91 fe ff ff       	callq  1090 <__assert_fail@plt>
    11ff:	8b 45 f8             	mov    -0x8(%rbp),%eax
    1202:	ba 0d 00 00 00       	mov    $0xd,%edx
    1207:	48 8d 35 16 0e 00 00 	lea    0xe16(%rip),%rsi        # 2024 <_IO_stdin_used+0x24>
    120e:	89 c7                	mov    %eax,%edi
    1210:	e8 6b fe ff ff       	callq  1080 <write@plt>
    1215:	89 45 fc             	mov    %eax,-0x4(%rbp)
    1218:	83 7d fc 0d          	cmpl   $0xd,-0x4(%rbp)
    121c:	74 1f                	je     123d <main+0x94>
    121e:	48 8d 0d 15 0e 00 00 	lea    0xe15(%rip),%rcx        # 203a <__PRETTY_FUNCTION__.3160>
    1225:	ba 0b 00 00 00       	mov    $0xb,%edx
    122a:	48 8d 35 dd 0d 00 00 	lea    0xddd(%rip),%rsi        # 200e <_IO_stdin_used+0xe>
    1231:	48 8d 3d f9 0d 00 00 	lea    0xdf9(%rip),%rdi        # 2031 <_IO_stdin_used+0x31>
    1238:	e8 53 fe ff ff       	callq  1090 <__assert_fail@plt>
    123d:	8b 45 f8             	mov    -0x8(%rbp),%eax
    1240:	89 c7                	mov    %eax,%edi
    1242:	e8 59 fe ff ff       	callq  10a0 <close@plt>
    1247:	b8 00 00 00 00       	mov    $0x0,%eax
    124c:	c9                   	leaveq 
    124d:	c3                   	retq   
    124e:	66 90                	xchg   %ax,%ax

0000000000001250 <__libc_csu_init>:
    1250:	f3 0f 1e fa          	endbr64 
    1254:	41 57                	push   %r15
    1256:	4c 8d 3d 43 2b 00 00 	lea    0x2b43(%rip),%r15        # 3da0 <__frame_dummy_init_array_entry>
    125d:	41 56                	push   %r14
    125f:	49 89 d6             	mov    %rdx,%r14
    1262:	41 55                	push   %r13
    1264:	49 89 f5             	mov    %rsi,%r13
    1267:	41 54                	push   %r12
    1269:	41 89 fc             	mov    %edi,%r12d
    126c:	55                   	push   %rbp
    126d:	48 8d 2d 34 2b 00 00 	lea    0x2b34(%rip),%rbp        # 3da8 <__do_global_dtors_aux_fini_array_entry>
    1274:	53                   	push   %rbx
    1275:	4c 29 fd             	sub    %r15,%rbp
    1278:	48 83 ec 08          	sub    $0x8,%rsp
    127c:	e8 7f fd ff ff       	callq  1000 <_init>
    1281:	48 c1 fd 03          	sar    $0x3,%rbp
    1285:	74 1f                	je     12a6 <__libc_csu_init+0x56>
    1287:	31 db                	xor    %ebx,%ebx
    1289:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1290:	4c 89 f2             	mov    %r14,%rdx
    1293:	4c 89 ee             	mov    %r13,%rsi
    1296:	44 89 e7             	mov    %r12d,%edi
    1299:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    129d:	48 83 c3 01          	add    $0x1,%rbx
    12a1:	48 39 dd             	cmp    %rbx,%rbp
    12a4:	75 ea                	jne    1290 <__libc_csu_init+0x40>
    12a6:	48 83 c4 08          	add    $0x8,%rsp
    12aa:	5b                   	pop    %rbx
    12ab:	5d                   	pop    %rbp
    12ac:	41 5c                	pop    %r12
    12ae:	41 5d                	pop    %r13
    12b0:	41 5e                	pop    %r14
    12b2:	41 5f                	pop    %r15
    12b4:	c3                   	retq   
    12b5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    12bc:	00 00 00 00 

00000000000012c0 <__libc_csu_fini>:
    12c0:	f3 0f 1e fa          	endbr64 
    12c4:	c3                   	retq   

Disassembly of section .fini:

00000000000012c8 <_fini>:
    12c8:	f3 0f 1e fa          	endbr64 
    12cc:	48 83 ec 08          	sub    $0x8,%rsp
    12d0:	48 83 c4 08          	add    $0x8,%rsp
    12d4:	c3                   	retq   
_______________________________________________________________

add:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 9a 2f 00 00    	pushq  0x2f9a(%rip)        # 3fc0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 9b 2f 00 00 	bnd jmpq *0x2f9b(%rip)        # 3fc8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop

Disassembly of section .plt.got:

0000000000001040 <__cxa_finalize@plt>:
    1040:	f3 0f 1e fa          	endbr64 
    1044:	f2 ff 25 ad 2f 00 00 	bnd jmpq *0x2fad(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    104b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001050 <printf@plt>:
    1050:	f3 0f 1e fa          	endbr64 
    1054:	f2 ff 25 75 2f 00 00 	bnd jmpq *0x2f75(%rip)        # 3fd0 <printf@GLIBC_2.2.5>
    105b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001060 <_start>:
    1060:	f3 0f 1e fa          	endbr64 
    1064:	31 ed                	xor    %ebp,%ebp
    1066:	49 89 d1             	mov    %rdx,%r9
    1069:	5e                   	pop    %rsi
    106a:	48 89 e2             	mov    %rsp,%rdx
    106d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1071:	50                   	push   %rax
    1072:	54                   	push   %rsp
    1073:	4c 8d 05 a6 01 00 00 	lea    0x1a6(%rip),%r8        # 1220 <__libc_csu_fini>
    107a:	48 8d 0d 2f 01 00 00 	lea    0x12f(%rip),%rcx        # 11b0 <__libc_csu_init>
    1081:	48 8d 3d d9 00 00 00 	lea    0xd9(%rip),%rdi        # 1161 <main>
    1088:	ff 15 52 2f 00 00    	callq  *0x2f52(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    108e:	f4                   	hlt    
    108f:	90                   	nop

0000000000001090 <deregister_tm_clones>:
    1090:	48 8d 3d 79 2f 00 00 	lea    0x2f79(%rip),%rdi        # 4010 <__TMC_END__>
    1097:	48 8d 05 72 2f 00 00 	lea    0x2f72(%rip),%rax        # 4010 <__TMC_END__>
    109e:	48 39 f8             	cmp    %rdi,%rax
    10a1:	74 15                	je     10b8 <deregister_tm_clones+0x28>
    10a3:	48 8b 05 2e 2f 00 00 	mov    0x2f2e(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    10aa:	48 85 c0             	test   %rax,%rax
    10ad:	74 09                	je     10b8 <deregister_tm_clones+0x28>
    10af:	ff e0                	jmpq   *%rax
    10b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10b8:	c3                   	retq   
    10b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010c0 <register_tm_clones>:
    10c0:	48 8d 3d 49 2f 00 00 	lea    0x2f49(%rip),%rdi        # 4010 <__TMC_END__>
    10c7:	48 8d 35 42 2f 00 00 	lea    0x2f42(%rip),%rsi        # 4010 <__TMC_END__>
    10ce:	48 29 fe             	sub    %rdi,%rsi
    10d1:	48 89 f0             	mov    %rsi,%rax
    10d4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    10d8:	48 c1 f8 03          	sar    $0x3,%rax
    10dc:	48 01 c6             	add    %rax,%rsi
    10df:	48 d1 fe             	sar    %rsi
    10e2:	74 14                	je     10f8 <register_tm_clones+0x38>
    10e4:	48 8b 05 05 2f 00 00 	mov    0x2f05(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    10eb:	48 85 c0             	test   %rax,%rax
    10ee:	74 08                	je     10f8 <register_tm_clones+0x38>
    10f0:	ff e0                	jmpq   *%rax
    10f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    10f8:	c3                   	retq   
    10f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001100 <__do_global_dtors_aux>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	80 3d 05 2f 00 00 00 	cmpb   $0x0,0x2f05(%rip)        # 4010 <__TMC_END__>
    110b:	75 2b                	jne    1138 <__do_global_dtors_aux+0x38>
    110d:	55                   	push   %rbp
    110e:	48 83 3d e2 2e 00 00 	cmpq   $0x0,0x2ee2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1115:	00 
    1116:	48 89 e5             	mov    %rsp,%rbp
    1119:	74 0c                	je     1127 <__do_global_dtors_aux+0x27>
    111b:	48 8b 3d e6 2e 00 00 	mov    0x2ee6(%rip),%rdi        # 4008 <__dso_handle>
    1122:	e8 19 ff ff ff       	callq  1040 <__cxa_finalize@plt>
    1127:	e8 64 ff ff ff       	callq  1090 <deregister_tm_clones>
    112c:	c6 05 dd 2e 00 00 01 	movb   $0x1,0x2edd(%rip)        # 4010 <__TMC_END__>
    1133:	5d                   	pop    %rbp
    1134:	c3                   	retq   
    1135:	0f 1f 00             	nopl   (%rax)
    1138:	c3                   	retq   
    1139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001140 <frame_dummy>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	e9 77 ff ff ff       	jmpq   10c0 <register_tm_clones>

0000000000001149 <add>:
    1149:	f3 0f 1e fa          	endbr64 
    114d:	55                   	push   %rbp
    114e:	48 89 e5             	mov    %rsp,%rbp
    1151:	89 7d fc             	mov    %edi,-0x4(%rbp)
    1154:	89 75 f8             	mov    %esi,-0x8(%rbp)
    1157:	8b 55 fc             	mov    -0x4(%rbp),%edx
    115a:	8b 45 f8             	mov    -0x8(%rbp),%eax
    115d:	01 d0                	add    %edx,%eax
    115f:	5d                   	pop    %rbp
    1160:	c3                   	retq   

0000000000001161 <main>:
    1161:	f3 0f 1e fa          	endbr64 
    1165:	55                   	push   %rbp
    1166:	48 89 e5             	mov    %rsp,%rbp
    1169:	48 83 ec 10          	sub    $0x10,%rsp
    116d:	c7 45 f4 7d 00 00 00 	movl   $0x7d,-0xc(%rbp)
    1174:	c7 45 f8 50 00 00 00 	movl   $0x50,-0x8(%rbp)
    117b:	8b 55 f8             	mov    -0x8(%rbp),%edx
    117e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1181:	89 d6                	mov    %edx,%esi
    1183:	89 c7                	mov    %eax,%edi
    1185:	e8 bf ff ff ff       	callq  1149 <add>
    118a:	89 45 fc             	mov    %eax,-0x4(%rbp)
    118d:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1190:	89 c6                	mov    %eax,%esi
    1192:	48 8d 3d 6b 0e 00 00 	lea    0xe6b(%rip),%rdi        # 2004 <_IO_stdin_used+0x4>
    1199:	b8 00 00 00 00       	mov    $0x0,%eax
    119e:	e8 ad fe ff ff       	callq  1050 <printf@plt>
    11a3:	8b 45 fc             	mov    -0x4(%rbp),%eax
    11a6:	c9                   	leaveq 
    11a7:	c3                   	retq   
    11a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    11af:	00 

00000000000011b0 <__libc_csu_init>:
    11b0:	f3 0f 1e fa          	endbr64 
    11b4:	41 57                	push   %r15
    11b6:	4c 8d 3d fb 2b 00 00 	lea    0x2bfb(%rip),%r15        # 3db8 <__frame_dummy_init_array_entry>
    11bd:	41 56                	push   %r14
    11bf:	49 89 d6             	mov    %rdx,%r14
    11c2:	41 55                	push   %r13
    11c4:	49 89 f5             	mov    %rsi,%r13
    11c7:	41 54                	push   %r12
    11c9:	41 89 fc             	mov    %edi,%r12d
    11cc:	55                   	push   %rbp
    11cd:	48 8d 2d ec 2b 00 00 	lea    0x2bec(%rip),%rbp        # 3dc0 <__do_global_dtors_aux_fini_array_entry>
    11d4:	53                   	push   %rbx
    11d5:	4c 29 fd             	sub    %r15,%rbp
    11d8:	48 83 ec 08          	sub    $0x8,%rsp
    11dc:	e8 1f fe ff ff       	callq  1000 <_init>
    11e1:	48 c1 fd 03          	sar    $0x3,%rbp
    11e5:	74 1f                	je     1206 <__libc_csu_init+0x56>
    11e7:	31 db                	xor    %ebx,%ebx
    11e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    11f0:	4c 89 f2             	mov    %r14,%rdx
    11f3:	4c 89 ee             	mov    %r13,%rsi
    11f6:	44 89 e7             	mov    %r12d,%edi
    11f9:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    11fd:	48 83 c3 01          	add    $0x1,%rbx
    1201:	48 39 dd             	cmp    %rbx,%rbp
    1204:	75 ea                	jne    11f0 <__libc_csu_init+0x40>
    1206:	48 83 c4 08          	add    $0x8,%rsp
    120a:	5b                   	pop    %rbx
    120b:	5d                   	pop    %rbp
    120c:	41 5c                	pop    %r12
    120e:	41 5d                	pop    %r13
    1210:	41 5e                	pop    %r14
    1212:	41 5f                	pop    %r15
    1214:	c3                   	retq   
    1215:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    121c:	00 00 00 00 

0000000000001220 <__libc_csu_fini>:
    1220:	f3 0f 1e fa          	endbr64 
    1224:	c3                   	retq   

Disassembly of section .fini:

0000000000001228 <_fini>:
    1228:	f3 0f 1e fa          	endbr64 
    122c:	48 83 ec 08          	sub    $0x8,%rsp
    1230:	48 83 c4 08          	add    $0x8,%rsp
    1234:	c3                   	retq   
_______________________________________________________________
_______________________________________________________________
_______________________________________________________________

phase_4:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 8a 2f 00 00    	pushq  0x2f8a(%rip)        # 3fb0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 8b 2f 00 00 	bnd jmpq *0x2f8b(%rip)        # 3fb8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	pushq  $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmpq 1020 <.plt>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	pushq  $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmpq 1020 <.plt>
    105f:	90                   	nop

Disassembly of section .plt.got:

0000000000001060 <__cxa_finalize@plt>:
    1060:	f3 0f 1e fa          	endbr64 
    1064:	f2 ff 25 8d 2f 00 00 	bnd jmpq *0x2f8d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    106b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001070 <puts@plt>:
    1070:	f3 0f 1e fa          	endbr64 
    1074:	f2 ff 25 45 2f 00 00 	bnd jmpq *0x2f45(%rip)        # 3fc0 <puts@GLIBC_2.2.5>
    107b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001080 <__stack_chk_fail@plt>:
    1080:	f3 0f 1e fa          	endbr64 
    1084:	f2 ff 25 3d 2f 00 00 	bnd jmpq *0x2f3d(%rip)        # 3fc8 <__stack_chk_fail@GLIBC_2.4>
    108b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001090 <__isoc99_scanf@plt>:
    1090:	f3 0f 1e fa          	endbr64 
    1094:	f2 ff 25 35 2f 00 00 	bnd jmpq *0x2f35(%rip)        # 3fd0 <__isoc99_scanf@GLIBC_2.7>
    109b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

00000000000010a0 <_start>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	31 ed                	xor    %ebp,%ebp
    10a6:	49 89 d1             	mov    %rdx,%r9
    10a9:	5e                   	pop    %rsi
    10aa:	48 89 e2             	mov    %rsp,%rdx
    10ad:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    10b1:	50                   	push   %rax
    10b2:	54                   	push   %rsp
    10b3:	4c 8d 05 a6 02 00 00 	lea    0x2a6(%rip),%r8        # 1360 <__libc_csu_fini>
    10ba:	48 8d 0d 2f 02 00 00 	lea    0x22f(%rip),%rcx        # 12f0 <__libc_csu_init>
    10c1:	48 8d 3d 7f 01 00 00 	lea    0x17f(%rip),%rdi        # 1247 <main>
    10c8:	ff 15 12 2f 00 00    	callq  *0x2f12(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    10ce:	f4                   	hlt    
    10cf:	90                   	nop

00000000000010d0 <deregister_tm_clones>:
    10d0:	48 8d 3d 39 2f 00 00 	lea    0x2f39(%rip),%rdi        # 4010 <__TMC_END__>
    10d7:	48 8d 05 32 2f 00 00 	lea    0x2f32(%rip),%rax        # 4010 <__TMC_END__>
    10de:	48 39 f8             	cmp    %rdi,%rax
    10e1:	74 15                	je     10f8 <deregister_tm_clones+0x28>
    10e3:	48 8b 05 ee 2e 00 00 	mov    0x2eee(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    10ea:	48 85 c0             	test   %rax,%rax
    10ed:	74 09                	je     10f8 <deregister_tm_clones+0x28>
    10ef:	ff e0                	jmpq   *%rax
    10f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10f8:	c3                   	retq   
    10f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001100 <register_tm_clones>:
    1100:	48 8d 3d 09 2f 00 00 	lea    0x2f09(%rip),%rdi        # 4010 <__TMC_END__>
    1107:	48 8d 35 02 2f 00 00 	lea    0x2f02(%rip),%rsi        # 4010 <__TMC_END__>
    110e:	48 29 fe             	sub    %rdi,%rsi
    1111:	48 89 f0             	mov    %rsi,%rax
    1114:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1118:	48 c1 f8 03          	sar    $0x3,%rax
    111c:	48 01 c6             	add    %rax,%rsi
    111f:	48 d1 fe             	sar    %rsi
    1122:	74 14                	je     1138 <register_tm_clones+0x38>
    1124:	48 8b 05 c5 2e 00 00 	mov    0x2ec5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    112b:	48 85 c0             	test   %rax,%rax
    112e:	74 08                	je     1138 <register_tm_clones+0x38>
    1130:	ff e0                	jmpq   *%rax
    1132:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1138:	c3                   	retq   
    1139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001140 <__do_global_dtors_aux>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	80 3d c5 2e 00 00 00 	cmpb   $0x0,0x2ec5(%rip)        # 4010 <__TMC_END__>
    114b:	75 2b                	jne    1178 <__do_global_dtors_aux+0x38>
    114d:	55                   	push   %rbp
    114e:	48 83 3d a2 2e 00 00 	cmpq   $0x0,0x2ea2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1155:	00 
    1156:	48 89 e5             	mov    %rsp,%rbp
    1159:	74 0c                	je     1167 <__do_global_dtors_aux+0x27>
    115b:	48 8b 3d a6 2e 00 00 	mov    0x2ea6(%rip),%rdi        # 4008 <__dso_handle>
    1162:	e8 f9 fe ff ff       	callq  1060 <__cxa_finalize@plt>
    1167:	e8 64 ff ff ff       	callq  10d0 <deregister_tm_clones>
    116c:	c6 05 9d 2e 00 00 01 	movb   $0x1,0x2e9d(%rip)        # 4010 <__TMC_END__>
    1173:	5d                   	pop    %rbp
    1174:	c3                   	retq   
    1175:	0f 1f 00             	nopl   (%rax)
    1178:	c3                   	retq   
    1179:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001180 <frame_dummy>:
    1180:	f3 0f 1e fa          	endbr64 
    1184:	e9 77 ff ff ff       	jmpq   1100 <register_tm_clones>

0000000000001189 <bomb>:
    1189:	f3 0f 1e fa          	endbr64 
    118d:	55                   	push   %rbp
    118e:	48 89 e5             	mov    %rsp,%rbp
    1191:	48 8d 3d 6c 0e 00 00 	lea    0xe6c(%rip),%rdi        # 2004 <_IO_stdin_used+0x4>
    1198:	e8 d3 fe ff ff       	callq  1070 <puts@plt>
    119d:	90                   	nop
    119e:	5d                   	pop    %rbp
    119f:	c3                   	retq   

00000000000011a0 <fun>:
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	55                   	push   %rbp
    11a5:	48 89 e5             	mov    %rsp,%rbp
    11a8:	48 83 ec 20          	sub    $0x20,%rsp
    11ac:	89 7d ec             	mov    %edi,-0x14(%rbp)
    11af:	89 75 e8             	mov    %esi,-0x18(%rbp)
    11b2:	89 55 e4             	mov    %edx,-0x1c(%rbp)
    11b5:	8b 45 ec             	mov    -0x14(%rbp),%eax
    11b8:	2b 45 e8             	sub    -0x18(%rbp),%eax
    11bb:	89 45 f8             	mov    %eax,-0x8(%rbp)
    11be:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    11c5:	83 7d f8 01          	cmpl   $0x1,-0x8(%rbp)
    11c9:	0f 9f c0             	setg   %al
    11cc:	0f b6 c0             	movzbl %al,%eax
    11cf:	89 45 f8             	mov    %eax,-0x8(%rbp)
    11d2:	8b 55 f8             	mov    -0x8(%rbp),%edx
    11d5:	8b 45 e8             	mov    -0x18(%rbp),%eax
    11d8:	01 d0                	add    %edx,%eax
    11da:	89 45 fc             	mov    %eax,-0x4(%rbp)
    11dd:	8b 45 fc             	mov    -0x4(%rbp),%eax
    11e0:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    11e3:	7f 3f                	jg     1224 <fun+0x84>
    11e5:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    11ec:	8b 45 fc             	mov    -0x4(%rbp),%eax
    11ef:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    11f2:	7c 05                	jl     11f9 <fun+0x59>
    11f4:	8b 45 f8             	mov    -0x8(%rbp),%eax
    11f7:	eb 4c                	jmp    1245 <fun+0xa5>
    11f9:	8b 45 fc             	mov    -0x4(%rbp),%eax
    11fc:	83 c0 01             	add    $0x1,%eax
    11ff:	89 45 e8             	mov    %eax,-0x18(%rbp)
    1202:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    1205:	8b 4d e8             	mov    -0x18(%rbp),%ecx
    1208:	8b 45 ec             	mov    -0x14(%rbp),%eax
    120b:	89 ce                	mov    %ecx,%esi
    120d:	89 c7                	mov    %eax,%edi
    120f:	e8 8c ff ff ff       	callq  11a0 <fun>
    1214:	8b 45 f8             	mov    -0x8(%rbp),%eax
    1217:	01 c0                	add    %eax,%eax
    1219:	83 c0 01             	add    $0x1,%eax
    121c:	89 45 f8             	mov    %eax,-0x8(%rbp)
    121f:	8b 45 f8             	mov    -0x8(%rbp),%eax
    1222:	eb 21                	jmp    1245 <fun+0xa5>
    1224:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1227:	83 e8 01             	sub    $0x1,%eax
    122a:	89 45 ec             	mov    %eax,-0x14(%rbp)
    122d:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    1230:	8b 4d e8             	mov    -0x18(%rbp),%ecx
    1233:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1236:	89 ce                	mov    %ecx,%esi
    1238:	89 c7                	mov    %eax,%edi
    123a:	e8 61 ff ff ff       	callq  11a0 <fun>
    123f:	d1 65 f8             	shll   -0x8(%rbp)
    1242:	8b 45 f8             	mov    -0x8(%rbp),%eax
    1245:	c9                   	leaveq 
    1246:	c3                   	retq   

0000000000001247 <main>:
    1247:	f3 0f 1e fa          	endbr64 
    124b:	55                   	push   %rbp
    124c:	48 89 e5             	mov    %rsp,%rbp
    124f:	48 83 ec 20          	sub    $0x20,%rsp
    1253:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    125a:	00 00 
    125c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1260:	31 c0                	xor    %eax,%eax
    1262:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    1266:	48 8d 45 ec          	lea    -0x14(%rbp),%rax
    126a:	48 89 c6             	mov    %rax,%rsi
    126d:	48 8d 3d a9 0d 00 00 	lea    0xda9(%rip),%rdi        # 201d <_IO_stdin_used+0x1d>
    1274:	b8 00 00 00 00       	mov    $0x0,%eax
    1279:	e8 12 fe ff ff       	callq  1090 <__isoc99_scanf@plt>
    127e:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1281:	85 c0                	test   %eax,%eax
    1283:	78 50                	js     12d5 <main+0x8e>
    1285:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1288:	83 f8 0e             	cmp    $0xe,%eax
    128b:	7f 48                	jg     12d5 <main+0x8e>
    128d:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1290:	89 c2                	mov    %eax,%edx
    1292:	be 00 00 00 00       	mov    $0x0,%esi
    1297:	bf 0e 00 00 00       	mov    $0xe,%edi
    129c:	e8 ff fe ff ff       	callq  11a0 <fun>
    12a1:	89 45 f4             	mov    %eax,-0xc(%rbp)
    12a4:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
    12a8:	74 0c                	je     12b6 <main+0x6f>
    12aa:	b8 00 00 00 00       	mov    $0x0,%eax
    12af:	e8 d5 fe ff ff       	callq  1189 <bomb>
    12b4:	eb 1f                	jmp    12d5 <main+0x8e>
    12b6:	8b 45 f0             	mov    -0x10(%rbp),%eax
    12b9:	85 c0                	test   %eax,%eax
    12bb:	75 0e                	jne    12cb <main+0x84>
    12bd:	48 8d 3d 5f 0d 00 00 	lea    0xd5f(%rip),%rdi        # 2023 <_IO_stdin_used+0x23>
    12c4:	e8 a7 fd ff ff       	callq  1070 <puts@plt>
    12c9:	eb 0a                	jmp    12d5 <main+0x8e>
    12cb:	b8 00 00 00 00       	mov    $0x0,%eax
    12d0:	e8 b4 fe ff ff       	callq  1189 <bomb>
    12d5:	b8 00 00 00 00       	mov    $0x0,%eax
    12da:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    12de:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    12e5:	00 00 
    12e7:	74 05                	je     12ee <main+0xa7>
    12e9:	e8 92 fd ff ff       	callq  1080 <__stack_chk_fail@plt>
    12ee:	c9                   	leaveq 
    12ef:	c3                   	retq   

00000000000012f0 <__libc_csu_init>:
    12f0:	f3 0f 1e fa          	endbr64 
    12f4:	41 57                	push   %r15
    12f6:	4c 8d 3d ab 2a 00 00 	lea    0x2aab(%rip),%r15        # 3da8 <__frame_dummy_init_array_entry>
    12fd:	41 56                	push   %r14
    12ff:	49 89 d6             	mov    %rdx,%r14
    1302:	41 55                	push   %r13
    1304:	49 89 f5             	mov    %rsi,%r13
    1307:	41 54                	push   %r12
    1309:	41 89 fc             	mov    %edi,%r12d
    130c:	55                   	push   %rbp
    130d:	48 8d 2d 9c 2a 00 00 	lea    0x2a9c(%rip),%rbp        # 3db0 <__do_global_dtors_aux_fini_array_entry>
    1314:	53                   	push   %rbx
    1315:	4c 29 fd             	sub    %r15,%rbp
    1318:	48 83 ec 08          	sub    $0x8,%rsp
    131c:	e8 df fc ff ff       	callq  1000 <_init>
    1321:	48 c1 fd 03          	sar    $0x3,%rbp
    1325:	74 1f                	je     1346 <__libc_csu_init+0x56>
    1327:	31 db                	xor    %ebx,%ebx
    1329:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1330:	4c 89 f2             	mov    %r14,%rdx
    1333:	4c 89 ee             	mov    %r13,%rsi
    1336:	44 89 e7             	mov    %r12d,%edi
    1339:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    133d:	48 83 c3 01          	add    $0x1,%rbx
    1341:	48 39 dd             	cmp    %rbx,%rbp
    1344:	75 ea                	jne    1330 <__libc_csu_init+0x40>
    1346:	48 83 c4 08          	add    $0x8,%rsp
    134a:	5b                   	pop    %rbx
    134b:	5d                   	pop    %rbp
    134c:	41 5c                	pop    %r12
    134e:	41 5d                	pop    %r13
    1350:	41 5e                	pop    %r14
    1352:	41 5f                	pop    %r15
    1354:	c3                   	retq   
    1355:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    135c:	00 00 00 00 

0000000000001360 <__libc_csu_fini>:
    1360:	f3 0f 1e fa          	endbr64 
    1364:	c3                   	retq   

Disassembly of section .fini:

0000000000001368 <_fini>:
    1368:	f3 0f 1e fa          	endbr64 
    136c:	48 83 ec 08          	sub    $0x8,%rsp
    1370:	48 83 c4 08          	add    $0x8,%rsp
    1374:	c3                   	retq   
_______________________________________________________________

phase_4:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 8a 2f 00 00    	pushq  0x2f8a(%rip)        # 3fb0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 8b 2f 00 00 	bnd jmpq *0x2f8b(%rip)        # 3fb8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	pushq  $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmpq 1020 <.plt>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	pushq  $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmpq 1020 <.plt>
    105f:	90                   	nop

Disassembly of section .plt.got:

0000000000001060 <__cxa_finalize@plt>:
    1060:	f3 0f 1e fa          	endbr64 
    1064:	f2 ff 25 8d 2f 00 00 	bnd jmpq *0x2f8d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    106b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001070 <puts@plt>:
    1070:	f3 0f 1e fa          	endbr64 
    1074:	f2 ff 25 45 2f 00 00 	bnd jmpq *0x2f45(%rip)        # 3fc0 <puts@GLIBC_2.2.5>
    107b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001080 <__stack_chk_fail@plt>:
    1080:	f3 0f 1e fa          	endbr64 
    1084:	f2 ff 25 3d 2f 00 00 	bnd jmpq *0x2f3d(%rip)        # 3fc8 <__stack_chk_fail@GLIBC_2.4>
    108b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001090 <__isoc99_scanf@plt>:
    1090:	f3 0f 1e fa          	endbr64 
    1094:	f2 ff 25 35 2f 00 00 	bnd jmpq *0x2f35(%rip)        # 3fd0 <__isoc99_scanf@GLIBC_2.7>
    109b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

00000000000010a0 <_start>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	31 ed                	xor    %ebp,%ebp
    10a6:	49 89 d1             	mov    %rdx,%r9
    10a9:	5e                   	pop    %rsi
    10aa:	48 89 e2             	mov    %rsp,%rdx
    10ad:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    10b1:	50                   	push   %rax
    10b2:	54                   	push   %rsp
    10b3:	4c 8d 05 a6 02 00 00 	lea    0x2a6(%rip),%r8        # 1360 <__libc_csu_fini>
    10ba:	48 8d 0d 2f 02 00 00 	lea    0x22f(%rip),%rcx        # 12f0 <__libc_csu_init>
    10c1:	48 8d 3d 75 01 00 00 	lea    0x175(%rip),%rdi        # 123d <main>
    10c8:	ff 15 12 2f 00 00    	callq  *0x2f12(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    10ce:	f4                   	hlt    
    10cf:	90                   	nop

00000000000010d0 <deregister_tm_clones>:
    10d0:	48 8d 3d 39 2f 00 00 	lea    0x2f39(%rip),%rdi        # 4010 <__TMC_END__>
    10d7:	48 8d 05 32 2f 00 00 	lea    0x2f32(%rip),%rax        # 4010 <__TMC_END__>
    10de:	48 39 f8             	cmp    %rdi,%rax
    10e1:	74 15                	je     10f8 <deregister_tm_clones+0x28>
    10e3:	48 8b 05 ee 2e 00 00 	mov    0x2eee(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    10ea:	48 85 c0             	test   %rax,%rax
    10ed:	74 09                	je     10f8 <deregister_tm_clones+0x28>
    10ef:	ff e0                	jmpq   *%rax
    10f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10f8:	c3                   	retq   
    10f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001100 <register_tm_clones>:
    1100:	48 8d 3d 09 2f 00 00 	lea    0x2f09(%rip),%rdi        # 4010 <__TMC_END__>
    1107:	48 8d 35 02 2f 00 00 	lea    0x2f02(%rip),%rsi        # 4010 <__TMC_END__>
    110e:	48 29 fe             	sub    %rdi,%rsi
    1111:	48 89 f0             	mov    %rsi,%rax
    1114:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1118:	48 c1 f8 03          	sar    $0x3,%rax
    111c:	48 01 c6             	add    %rax,%rsi
    111f:	48 d1 fe             	sar    %rsi
    1122:	74 14                	je     1138 <register_tm_clones+0x38>
    1124:	48 8b 05 c5 2e 00 00 	mov    0x2ec5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    112b:	48 85 c0             	test   %rax,%rax
    112e:	74 08                	je     1138 <register_tm_clones+0x38>
    1130:	ff e0                	jmpq   *%rax
    1132:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1138:	c3                   	retq   
    1139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001140 <__do_global_dtors_aux>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	80 3d c5 2e 00 00 00 	cmpb   $0x0,0x2ec5(%rip)        # 4010 <__TMC_END__>
    114b:	75 2b                	jne    1178 <__do_global_dtors_aux+0x38>
    114d:	55                   	push   %rbp
    114e:	48 83 3d a2 2e 00 00 	cmpq   $0x0,0x2ea2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1155:	00 
    1156:	48 89 e5             	mov    %rsp,%rbp
    1159:	74 0c                	je     1167 <__do_global_dtors_aux+0x27>
    115b:	48 8b 3d a6 2e 00 00 	mov    0x2ea6(%rip),%rdi        # 4008 <__dso_handle>
    1162:	e8 f9 fe ff ff       	callq  1060 <__cxa_finalize@plt>
    1167:	e8 64 ff ff ff       	callq  10d0 <deregister_tm_clones>
    116c:	c6 05 9d 2e 00 00 01 	movb   $0x1,0x2e9d(%rip)        # 4010 <__TMC_END__>
    1173:	5d                   	pop    %rbp
    1174:	c3                   	retq   
    1175:	0f 1f 00             	nopl   (%rax)
    1178:	c3                   	retq   
    1179:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001180 <frame_dummy>:
    1180:	f3 0f 1e fa          	endbr64 
    1184:	e9 77 ff ff ff       	jmpq   1100 <register_tm_clones>

0000000000001189 <bomb>:
    1189:	f3 0f 1e fa          	endbr64 
    118d:	55                   	push   %rbp
    118e:	48 89 e5             	mov    %rsp,%rbp
    1191:	48 8d 3d 6c 0e 00 00 	lea    0xe6c(%rip),%rdi        # 2004 <_IO_stdin_used+0x4>
    1198:	e8 d3 fe ff ff       	callq  1070 <puts@plt>
    119d:	90                   	nop
    119e:	5d                   	pop    %rbp
    119f:	c3                   	retq   

00000000000011a0 <fun>:
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	55                   	push   %rbp
    11a5:	48 89 e5             	mov    %rsp,%rbp
    11a8:	48 83 ec 20          	sub    $0x20,%rsp
    11ac:	89 7d ec             	mov    %edi,-0x14(%rbp)
    11af:	89 75 e8             	mov    %esi,-0x18(%rbp)
    11b2:	89 55 e4             	mov    %edx,-0x1c(%rbp)
    11b5:	8b 45 ec             	mov    -0x14(%rbp),%eax
    11b8:	2b 45 e8             	sub    -0x18(%rbp),%eax
    11bb:	89 45 f8             	mov    %eax,-0x8(%rbp)
    11be:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    11c5:	d1 7d f8             	sarl   -0x8(%rbp)
    11c8:	8b 55 f8             	mov    -0x8(%rbp),%edx
    11cb:	8b 45 e8             	mov    -0x18(%rbp),%eax
    11ce:	01 d0                	add    %edx,%eax
    11d0:	89 45 fc             	mov    %eax,-0x4(%rbp)
    11d3:	8b 45 fc             	mov    -0x4(%rbp),%eax
    11d6:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    11d9:	7f 3f                	jg     121a <fun+0x7a>
    11db:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    11e2:	8b 45 fc             	mov    -0x4(%rbp),%eax
    11e5:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    11e8:	7c 05                	jl     11ef <fun+0x4f>
    11ea:	8b 45 f8             	mov    -0x8(%rbp),%eax
    11ed:	eb 4c                	jmp    123b <fun+0x9b>
    11ef:	8b 45 fc             	mov    -0x4(%rbp),%eax
    11f2:	83 c0 01             	add    $0x1,%eax
    11f5:	89 45 e8             	mov    %eax,-0x18(%rbp)
    11f8:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    11fb:	8b 4d e8             	mov    -0x18(%rbp),%ecx
    11fe:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1201:	89 ce                	mov    %ecx,%esi
    1203:	89 c7                	mov    %eax,%edi
    1205:	e8 96 ff ff ff       	callq  11a0 <fun>
    120a:	8b 45 f8             	mov    -0x8(%rbp),%eax
    120d:	01 c0                	add    %eax,%eax
    120f:	83 c0 01             	add    $0x1,%eax
    1212:	89 45 f8             	mov    %eax,-0x8(%rbp)
    1215:	8b 45 f8             	mov    -0x8(%rbp),%eax
    1218:	eb 21                	jmp    123b <fun+0x9b>
    121a:	8b 45 fc             	mov    -0x4(%rbp),%eax
    121d:	83 e8 01             	sub    $0x1,%eax
    1220:	89 45 ec             	mov    %eax,-0x14(%rbp)
    1223:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    1226:	8b 4d e8             	mov    -0x18(%rbp),%ecx
    1229:	8b 45 ec             	mov    -0x14(%rbp),%eax
    122c:	89 ce                	mov    %ecx,%esi
    122e:	89 c7                	mov    %eax,%edi
    1230:	e8 6b ff ff ff       	callq  11a0 <fun>
    1235:	d1 65 f8             	shll   -0x8(%rbp)
    1238:	8b 45 f8             	mov    -0x8(%rbp),%eax
    123b:	c9                   	leaveq 
    123c:	c3                   	retq   

000000000000123d <main>:
    123d:	f3 0f 1e fa          	endbr64 
    1241:	55                   	push   %rbp
    1242:	48 89 e5             	mov    %rsp,%rbp
    1245:	48 83 ec 20          	sub    $0x20,%rsp
    1249:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1250:	00 00 
    1252:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1256:	31 c0                	xor    %eax,%eax
    1258:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    125c:	48 8d 45 ec          	lea    -0x14(%rbp),%rax
    1260:	48 89 c6             	mov    %rax,%rsi
    1263:	48 8d 3d b3 0d 00 00 	lea    0xdb3(%rip),%rdi        # 201d <_IO_stdin_used+0x1d>
    126a:	b8 00 00 00 00       	mov    $0x0,%eax
    126f:	e8 1c fe ff ff       	callq  1090 <__isoc99_scanf@plt>
    1274:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1277:	85 c0                	test   %eax,%eax
    1279:	78 50                	js     12cb <main+0x8e>
    127b:	8b 45 ec             	mov    -0x14(%rbp),%eax
    127e:	83 f8 0e             	cmp    $0xe,%eax
    1281:	7f 48                	jg     12cb <main+0x8e>
    1283:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1286:	89 c2                	mov    %eax,%edx
    1288:	be 00 00 00 00       	mov    $0x0,%esi
    128d:	bf 0e 00 00 00       	mov    $0xe,%edi
    1292:	e8 09 ff ff ff       	callq  11a0 <fun>
    1297:	89 45 f4             	mov    %eax,-0xc(%rbp)
    129a:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
    129e:	74 0c                	je     12ac <main+0x6f>
    12a0:	b8 00 00 00 00       	mov    $0x0,%eax
    12a5:	e8 df fe ff ff       	callq  1189 <bomb>
    12aa:	eb 1f                	jmp    12cb <main+0x8e>
    12ac:	8b 45 f0             	mov    -0x10(%rbp),%eax
    12af:	85 c0                	test   %eax,%eax
    12b1:	75 0e                	jne    12c1 <main+0x84>
    12b3:	48 8d 3d 69 0d 00 00 	lea    0xd69(%rip),%rdi        # 2023 <_IO_stdin_used+0x23>
    12ba:	e8 b1 fd ff ff       	callq  1070 <puts@plt>
    12bf:	eb 0a                	jmp    12cb <main+0x8e>
    12c1:	b8 00 00 00 00       	mov    $0x0,%eax
    12c6:	e8 be fe ff ff       	callq  1189 <bomb>
    12cb:	b8 00 00 00 00       	mov    $0x0,%eax
    12d0:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    12d4:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    12db:	00 00 
    12dd:	74 05                	je     12e4 <main+0xa7>
    12df:	e8 9c fd ff ff       	callq  1080 <__stack_chk_fail@plt>
    12e4:	c9                   	leaveq 
    12e5:	c3                   	retq   
    12e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    12ed:	00 00 00 

00000000000012f0 <__libc_csu_init>:
    12f0:	f3 0f 1e fa          	endbr64 
    12f4:	41 57                	push   %r15
    12f6:	4c 8d 3d ab 2a 00 00 	lea    0x2aab(%rip),%r15        # 3da8 <__frame_dummy_init_array_entry>
    12fd:	41 56                	push   %r14
    12ff:	49 89 d6             	mov    %rdx,%r14
    1302:	41 55                	push   %r13
    1304:	49 89 f5             	mov    %rsi,%r13
    1307:	41 54                	push   %r12
    1309:	41 89 fc             	mov    %edi,%r12d
    130c:	55                   	push   %rbp
    130d:	48 8d 2d 9c 2a 00 00 	lea    0x2a9c(%rip),%rbp        # 3db0 <__do_global_dtors_aux_fini_array_entry>
    1314:	53                   	push   %rbx
    1315:	4c 29 fd             	sub    %r15,%rbp
    1318:	48 83 ec 08          	sub    $0x8,%rsp
    131c:	e8 df fc ff ff       	callq  1000 <_init>
    1321:	48 c1 fd 03          	sar    $0x3,%rbp
    1325:	74 1f                	je     1346 <__libc_csu_init+0x56>
    1327:	31 db                	xor    %ebx,%ebx
    1329:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1330:	4c 89 f2             	mov    %r14,%rdx
    1333:	4c 89 ee             	mov    %r13,%rsi
    1336:	44 89 e7             	mov    %r12d,%edi
    1339:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    133d:	48 83 c3 01          	add    $0x1,%rbx
    1341:	48 39 dd             	cmp    %rbx,%rbp
    1344:	75 ea                	jne    1330 <__libc_csu_init+0x40>
    1346:	48 83 c4 08          	add    $0x8,%rsp
    134a:	5b                   	pop    %rbx
    134b:	5d                   	pop    %rbp
    134c:	41 5c                	pop    %r12
    134e:	41 5d                	pop    %r13
    1350:	41 5e                	pop    %r14
    1352:	41 5f                	pop    %r15
    1354:	c3                   	retq   
    1355:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    135c:	00 00 00 00 

0000000000001360 <__libc_csu_fini>:
    1360:	f3 0f 1e fa          	endbr64 
    1364:	c3                   	retq   

Disassembly of section .fini:

0000000000001368 <_fini>:
    1368:	f3 0f 1e fa          	endbr64 
    136c:	48 83 ec 08          	sub    $0x8,%rsp
    1370:	48 83 c4 08          	add    $0x8,%rsp
    1374:	c3                   	retq   
_______________________________________________________________
_______________________________________________________________
_______________________________________________________________

phase_4:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 8a 2f 00 00    	pushq  0x2f8a(%rip)        # 3fb0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 8b 2f 00 00 	bnd jmpq *0x2f8b(%rip)        # 3fb8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	pushq  $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmpq 1020 <.plt>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	pushq  $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmpq 1020 <.plt>
    105f:	90                   	nop

Disassembly of section .plt.got:

0000000000001060 <__cxa_finalize@plt>:
    1060:	f3 0f 1e fa          	endbr64 
    1064:	f2 ff 25 8d 2f 00 00 	bnd jmpq *0x2f8d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    106b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001070 <puts@plt>:
    1070:	f3 0f 1e fa          	endbr64 
    1074:	f2 ff 25 45 2f 00 00 	bnd jmpq *0x2f45(%rip)        # 3fc0 <puts@GLIBC_2.2.5>
    107b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001080 <__stack_chk_fail@plt>:
    1080:	f3 0f 1e fa          	endbr64 
    1084:	f2 ff 25 3d 2f 00 00 	bnd jmpq *0x2f3d(%rip)        # 3fc8 <__stack_chk_fail@GLIBC_2.4>
    108b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001090 <__isoc99_scanf@plt>:
    1090:	f3 0f 1e fa          	endbr64 
    1094:	f2 ff 25 35 2f 00 00 	bnd jmpq *0x2f35(%rip)        # 3fd0 <__isoc99_scanf@GLIBC_2.7>
    109b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

00000000000010a0 <_start>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	31 ed                	xor    %ebp,%ebp
    10a6:	49 89 d1             	mov    %rdx,%r9
    10a9:	5e                   	pop    %rsi
    10aa:	48 89 e2             	mov    %rsp,%rdx
    10ad:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    10b1:	50                   	push   %rax
    10b2:	54                   	push   %rsp
    10b3:	4c 8d 05 d6 02 00 00 	lea    0x2d6(%rip),%r8        # 1390 <__libc_csu_fini>
    10ba:	48 8d 0d 5f 02 00 00 	lea    0x25f(%rip),%rcx        # 1320 <__libc_csu_init>
    10c1:	48 8d 3d 75 01 00 00 	lea    0x175(%rip),%rdi        # 123d <main>
    10c8:	ff 15 12 2f 00 00    	callq  *0x2f12(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    10ce:	f4                   	hlt    
    10cf:	90                   	nop

00000000000010d0 <deregister_tm_clones>:
    10d0:	48 8d 3d 39 2f 00 00 	lea    0x2f39(%rip),%rdi        # 4010 <__TMC_END__>
    10d7:	48 8d 05 32 2f 00 00 	lea    0x2f32(%rip),%rax        # 4010 <__TMC_END__>
    10de:	48 39 f8             	cmp    %rdi,%rax
    10e1:	74 15                	je     10f8 <deregister_tm_clones+0x28>
    10e3:	48 8b 05 ee 2e 00 00 	mov    0x2eee(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    10ea:	48 85 c0             	test   %rax,%rax
    10ed:	74 09                	je     10f8 <deregister_tm_clones+0x28>
    10ef:	ff e0                	jmpq   *%rax
    10f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10f8:	c3                   	retq   
    10f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001100 <register_tm_clones>:
    1100:	48 8d 3d 09 2f 00 00 	lea    0x2f09(%rip),%rdi        # 4010 <__TMC_END__>
    1107:	48 8d 35 02 2f 00 00 	lea    0x2f02(%rip),%rsi        # 4010 <__TMC_END__>
    110e:	48 29 fe             	sub    %rdi,%rsi
    1111:	48 89 f0             	mov    %rsi,%rax
    1114:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1118:	48 c1 f8 03          	sar    $0x3,%rax
    111c:	48 01 c6             	add    %rax,%rsi
    111f:	48 d1 fe             	sar    %rsi
    1122:	74 14                	je     1138 <register_tm_clones+0x38>
    1124:	48 8b 05 c5 2e 00 00 	mov    0x2ec5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    112b:	48 85 c0             	test   %rax,%rax
    112e:	74 08                	je     1138 <register_tm_clones+0x38>
    1130:	ff e0                	jmpq   *%rax
    1132:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1138:	c3                   	retq   
    1139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001140 <__do_global_dtors_aux>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	80 3d c5 2e 00 00 00 	cmpb   $0x0,0x2ec5(%rip)        # 4010 <__TMC_END__>
    114b:	75 2b                	jne    1178 <__do_global_dtors_aux+0x38>
    114d:	55                   	push   %rbp
    114e:	48 83 3d a2 2e 00 00 	cmpq   $0x0,0x2ea2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1155:	00 
    1156:	48 89 e5             	mov    %rsp,%rbp
    1159:	74 0c                	je     1167 <__do_global_dtors_aux+0x27>
    115b:	48 8b 3d a6 2e 00 00 	mov    0x2ea6(%rip),%rdi        # 4008 <__dso_handle>
    1162:	e8 f9 fe ff ff       	callq  1060 <__cxa_finalize@plt>
    1167:	e8 64 ff ff ff       	callq  10d0 <deregister_tm_clones>
    116c:	c6 05 9d 2e 00 00 01 	movb   $0x1,0x2e9d(%rip)        # 4010 <__TMC_END__>
    1173:	5d                   	pop    %rbp
    1174:	c3                   	retq   
    1175:	0f 1f 00             	nopl   (%rax)
    1178:	c3                   	retq   
    1179:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001180 <frame_dummy>:
    1180:	f3 0f 1e fa          	endbr64 
    1184:	e9 77 ff ff ff       	jmpq   1100 <register_tm_clones>

0000000000001189 <bomb>:
    1189:	f3 0f 1e fa          	endbr64 
    118d:	55                   	push   %rbp
    118e:	48 89 e5             	mov    %rsp,%rbp
    1191:	48 8d 3d 6c 0e 00 00 	lea    0xe6c(%rip),%rdi        # 2004 <_IO_stdin_used+0x4>
    1198:	e8 d3 fe ff ff       	callq  1070 <puts@plt>
    119d:	90                   	nop
    119e:	5d                   	pop    %rbp
    119f:	c3                   	retq   

00000000000011a0 <fun>:
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	55                   	push   %rbp
    11a5:	48 89 e5             	mov    %rsp,%rbp
    11a8:	48 83 ec 20          	sub    $0x20,%rsp
    11ac:	89 7d ec             	mov    %edi,-0x14(%rbp)
    11af:	89 75 e8             	mov    %esi,-0x18(%rbp)
    11b2:	89 55 e4             	mov    %edx,-0x1c(%rbp)
    11b5:	8b 45 ec             	mov    -0x14(%rbp),%eax
    11b8:	2b 45 e8             	sub    -0x18(%rbp),%eax
    11bb:	89 45 f8             	mov    %eax,-0x8(%rbp)
    11be:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    11c5:	d1 7d f8             	sarl   -0x8(%rbp)
    11c8:	8b 55 f8             	mov    -0x8(%rbp),%edx
    11cb:	8b 45 e8             	mov    -0x18(%rbp),%eax
    11ce:	01 d0                	add    %edx,%eax
    11d0:	89 45 fc             	mov    %eax,-0x4(%rbp)
    11d3:	8b 45 fc             	mov    -0x4(%rbp),%eax
    11d6:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    11d9:	7f 3f                	jg     121a <fun+0x7a>
    11db:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    11e2:	8b 45 fc             	mov    -0x4(%rbp),%eax
    11e5:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    11e8:	7c 05                	jl     11ef <fun+0x4f>
    11ea:	8b 45 f8             	mov    -0x8(%rbp),%eax
    11ed:	eb 4c                	jmp    123b <fun+0x9b>
    11ef:	8b 45 fc             	mov    -0x4(%rbp),%eax
    11f2:	83 c0 01             	add    $0x1,%eax
    11f5:	89 45 e8             	mov    %eax,-0x18(%rbp)
    11f8:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    11fb:	8b 4d e8             	mov    -0x18(%rbp),%ecx
    11fe:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1201:	89 ce                	mov    %ecx,%esi
    1203:	89 c7                	mov    %eax,%edi
    1205:	e8 96 ff ff ff       	callq  11a0 <fun>
    120a:	8b 45 f8             	mov    -0x8(%rbp),%eax
    120d:	01 c0                	add    %eax,%eax
    120f:	83 c0 01             	add    $0x1,%eax
    1212:	89 45 f8             	mov    %eax,-0x8(%rbp)
    1215:	8b 45 f8             	mov    -0x8(%rbp),%eax
    1218:	eb 21                	jmp    123b <fun+0x9b>
    121a:	8b 45 fc             	mov    -0x4(%rbp),%eax
    121d:	83 e8 01             	sub    $0x1,%eax
    1220:	89 45 ec             	mov    %eax,-0x14(%rbp)
    1223:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    1226:	8b 4d e8             	mov    -0x18(%rbp),%ecx
    1229:	8b 45 ec             	mov    -0x14(%rbp),%eax
    122c:	89 ce                	mov    %ecx,%esi
    122e:	89 c7                	mov    %eax,%edi
    1230:	e8 6b ff ff ff       	callq  11a0 <fun>
    1235:	d1 65 f8             	shll   -0x8(%rbp)
    1238:	8b 45 f8             	mov    -0x8(%rbp),%eax
    123b:	c9                   	leaveq 
    123c:	c3                   	retq   

000000000000123d <main>:
    123d:	f3 0f 1e fa          	endbr64 
    1241:	55                   	push   %rbp
    1242:	48 89 e5             	mov    %rsp,%rbp
    1245:	48 83 ec 20          	sub    $0x20,%rsp
    1249:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1250:	00 00 
    1252:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1256:	31 c0                	xor    %eax,%eax
    1258:	48 8d 3d be 0d 00 00 	lea    0xdbe(%rip),%rdi        # 201d <_IO_stdin_used+0x1d>
    125f:	e8 0c fe ff ff       	callq  1070 <puts@plt>
    1264:	48 8d 45 ec          	lea    -0x14(%rbp),%rax
    1268:	48 89 c6             	mov    %rax,%rsi
    126b:	48 8d 3d bf 0d 00 00 	lea    0xdbf(%rip),%rdi        # 2031 <_IO_stdin_used+0x31>
    1272:	b8 00 00 00 00       	mov    $0x0,%eax
    1277:	e8 14 fe ff ff       	callq  1090 <__isoc99_scanf@plt>
    127c:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    1283:	eb 77                	jmp    12fc <main+0xbf>
    1285:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    1289:	48 8d 45 e4          	lea    -0x1c(%rbp),%rax
    128d:	48 89 c6             	mov    %rax,%rsi
    1290:	48 8d 3d 9d 0d 00 00 	lea    0xd9d(%rip),%rdi        # 2034 <_IO_stdin_used+0x34>
    1297:	b8 00 00 00 00       	mov    $0x0,%eax
    129c:	e8 ef fd ff ff       	callq  1090 <__isoc99_scanf@plt>
    12a1:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    12a4:	85 c0                	test   %eax,%eax
    12a6:	78 50                	js     12f8 <main+0xbb>
    12a8:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    12ab:	83 f8 0e             	cmp    $0xe,%eax
    12ae:	7f 48                	jg     12f8 <main+0xbb>
    12b0:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    12b3:	89 c2                	mov    %eax,%edx
    12b5:	be 00 00 00 00       	mov    $0x0,%esi
    12ba:	bf 0e 00 00 00       	mov    $0xe,%edi
    12bf:	e8 dc fe ff ff       	callq  11a0 <fun>
    12c4:	89 45 f4             	mov    %eax,-0xc(%rbp)
    12c7:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
    12cb:	74 0c                	je     12d9 <main+0x9c>
    12cd:	b8 00 00 00 00       	mov    $0x0,%eax
    12d2:	e8 b2 fe ff ff       	callq  1189 <bomb>
    12d7:	eb 1f                	jmp    12f8 <main+0xbb>
    12d9:	8b 45 e8             	mov    -0x18(%rbp),%eax
    12dc:	85 c0                	test   %eax,%eax
    12de:	75 0e                	jne    12ee <main+0xb1>
    12e0:	48 8d 3d 53 0d 00 00 	lea    0xd53(%rip),%rdi        # 203a <_IO_stdin_used+0x3a>
    12e7:	e8 84 fd ff ff       	callq  1070 <puts@plt>
    12ec:	eb 0a                	jmp    12f8 <main+0xbb>
    12ee:	b8 00 00 00 00       	mov    $0x0,%eax
    12f3:	e8 91 fe ff ff       	callq  1189 <bomb>
    12f8:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
    12fc:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    12ff:	39 45 f0             	cmp    %eax,-0x10(%rbp)
    1302:	7c 81                	jl     1285 <main+0x48>
    1304:	b8 00 00 00 00       	mov    $0x0,%eax
    1309:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    130d:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    1314:	00 00 
    1316:	74 05                	je     131d <main+0xe0>
    1318:	e8 63 fd ff ff       	callq  1080 <__stack_chk_fail@plt>
    131d:	c9                   	leaveq 
    131e:	c3                   	retq   
    131f:	90                   	nop

0000000000001320 <__libc_csu_init>:
    1320:	f3 0f 1e fa          	endbr64 
    1324:	41 57                	push   %r15
    1326:	4c 8d 3d 7b 2a 00 00 	lea    0x2a7b(%rip),%r15        # 3da8 <__frame_dummy_init_array_entry>
    132d:	41 56                	push   %r14
    132f:	49 89 d6             	mov    %rdx,%r14
    1332:	41 55                	push   %r13
    1334:	49 89 f5             	mov    %rsi,%r13
    1337:	41 54                	push   %r12
    1339:	41 89 fc             	mov    %edi,%r12d
    133c:	55                   	push   %rbp
    133d:	48 8d 2d 6c 2a 00 00 	lea    0x2a6c(%rip),%rbp        # 3db0 <__do_global_dtors_aux_fini_array_entry>
    1344:	53                   	push   %rbx
    1345:	4c 29 fd             	sub    %r15,%rbp
    1348:	48 83 ec 08          	sub    $0x8,%rsp
    134c:	e8 af fc ff ff       	callq  1000 <_init>
    1351:	48 c1 fd 03          	sar    $0x3,%rbp
    1355:	74 1f                	je     1376 <__libc_csu_init+0x56>
    1357:	31 db                	xor    %ebx,%ebx
    1359:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1360:	4c 89 f2             	mov    %r14,%rdx
    1363:	4c 89 ee             	mov    %r13,%rsi
    1366:	44 89 e7             	mov    %r12d,%edi
    1369:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    136d:	48 83 c3 01          	add    $0x1,%rbx
    1371:	48 39 dd             	cmp    %rbx,%rbp
    1374:	75 ea                	jne    1360 <__libc_csu_init+0x40>
    1376:	48 83 c4 08          	add    $0x8,%rsp
    137a:	5b                   	pop    %rbx
    137b:	5d                   	pop    %rbp
    137c:	41 5c                	pop    %r12
    137e:	41 5d                	pop    %r13
    1380:	41 5e                	pop    %r14
    1382:	41 5f                	pop    %r15
    1384:	c3                   	retq   
    1385:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    138c:	00 00 00 00 

0000000000001390 <__libc_csu_fini>:
    1390:	f3 0f 1e fa          	endbr64 
    1394:	c3                   	retq   

Disassembly of section .fini:

0000000000001398 <_fini>:
    1398:	f3 0f 1e fa          	endbr64 
    139c:	48 83 ec 08          	sub    $0x8,%rsp
    13a0:	48 83 c4 08          	add    $0x8,%rsp
    13a4:	c3                   	retq   
_______________________________________________________________

phase_4:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 8a 2f 00 00    	pushq  0x2f8a(%rip)        # 3fb0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 8b 2f 00 00 	bnd jmpq *0x2f8b(%rip)        # 3fb8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	pushq  $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmpq 1020 <.plt>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	pushq  $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmpq 1020 <.plt>
    105f:	90                   	nop

Disassembly of section .plt.got:

0000000000001060 <__cxa_finalize@plt>:
    1060:	f3 0f 1e fa          	endbr64 
    1064:	f2 ff 25 8d 2f 00 00 	bnd jmpq *0x2f8d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    106b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001070 <puts@plt>:
    1070:	f3 0f 1e fa          	endbr64 
    1074:	f2 ff 25 45 2f 00 00 	bnd jmpq *0x2f45(%rip)        # 3fc0 <puts@GLIBC_2.2.5>
    107b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001080 <__stack_chk_fail@plt>:
    1080:	f3 0f 1e fa          	endbr64 
    1084:	f2 ff 25 3d 2f 00 00 	bnd jmpq *0x2f3d(%rip)        # 3fc8 <__stack_chk_fail@GLIBC_2.4>
    108b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001090 <__isoc99_scanf@plt>:
    1090:	f3 0f 1e fa          	endbr64 
    1094:	f2 ff 25 35 2f 00 00 	bnd jmpq *0x2f35(%rip)        # 3fd0 <__isoc99_scanf@GLIBC_2.7>
    109b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

00000000000010a0 <_start>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	31 ed                	xor    %ebp,%ebp
    10a6:	49 89 d1             	mov    %rdx,%r9
    10a9:	5e                   	pop    %rsi
    10aa:	48 89 e2             	mov    %rsp,%rdx
    10ad:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    10b1:	50                   	push   %rax
    10b2:	54                   	push   %rsp
    10b3:	4c 8d 05 d6 02 00 00 	lea    0x2d6(%rip),%r8        # 1390 <__libc_csu_fini>
    10ba:	48 8d 0d 5f 02 00 00 	lea    0x25f(%rip),%rcx        # 1320 <__libc_csu_init>
    10c1:	48 8d 3d 75 01 00 00 	lea    0x175(%rip),%rdi        # 123d <main>
    10c8:	ff 15 12 2f 00 00    	callq  *0x2f12(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    10ce:	f4                   	hlt    
    10cf:	90                   	nop

00000000000010d0 <deregister_tm_clones>:
    10d0:	48 8d 3d 39 2f 00 00 	lea    0x2f39(%rip),%rdi        # 4010 <__TMC_END__>
    10d7:	48 8d 05 32 2f 00 00 	lea    0x2f32(%rip),%rax        # 4010 <__TMC_END__>
    10de:	48 39 f8             	cmp    %rdi,%rax
    10e1:	74 15                	je     10f8 <deregister_tm_clones+0x28>
    10e3:	48 8b 05 ee 2e 00 00 	mov    0x2eee(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    10ea:	48 85 c0             	test   %rax,%rax
    10ed:	74 09                	je     10f8 <deregister_tm_clones+0x28>
    10ef:	ff e0                	jmpq   *%rax
    10f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10f8:	c3                   	retq   
    10f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001100 <register_tm_clones>:
    1100:	48 8d 3d 09 2f 00 00 	lea    0x2f09(%rip),%rdi        # 4010 <__TMC_END__>
    1107:	48 8d 35 02 2f 00 00 	lea    0x2f02(%rip),%rsi        # 4010 <__TMC_END__>
    110e:	48 29 fe             	sub    %rdi,%rsi
    1111:	48 89 f0             	mov    %rsi,%rax
    1114:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1118:	48 c1 f8 03          	sar    $0x3,%rax
    111c:	48 01 c6             	add    %rax,%rsi
    111f:	48 d1 fe             	sar    %rsi
    1122:	74 14                	je     1138 <register_tm_clones+0x38>
    1124:	48 8b 05 c5 2e 00 00 	mov    0x2ec5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    112b:	48 85 c0             	test   %rax,%rax
    112e:	74 08                	je     1138 <register_tm_clones+0x38>
    1130:	ff e0                	jmpq   *%rax
    1132:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1138:	c3                   	retq   
    1139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001140 <__do_global_dtors_aux>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	80 3d c5 2e 00 00 00 	cmpb   $0x0,0x2ec5(%rip)        # 4010 <__TMC_END__>
    114b:	75 2b                	jne    1178 <__do_global_dtors_aux+0x38>
    114d:	55                   	push   %rbp
    114e:	48 83 3d a2 2e 00 00 	cmpq   $0x0,0x2ea2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1155:	00 
    1156:	48 89 e5             	mov    %rsp,%rbp
    1159:	74 0c                	je     1167 <__do_global_dtors_aux+0x27>
    115b:	48 8b 3d a6 2e 00 00 	mov    0x2ea6(%rip),%rdi        # 4008 <__dso_handle>
    1162:	e8 f9 fe ff ff       	callq  1060 <__cxa_finalize@plt>
    1167:	e8 64 ff ff ff       	callq  10d0 <deregister_tm_clones>
    116c:	c6 05 9d 2e 00 00 01 	movb   $0x1,0x2e9d(%rip)        # 4010 <__TMC_END__>
    1173:	5d                   	pop    %rbp
    1174:	c3                   	retq   
    1175:	0f 1f 00             	nopl   (%rax)
    1178:	c3                   	retq   
    1179:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001180 <frame_dummy>:
    1180:	f3 0f 1e fa          	endbr64 
    1184:	e9 77 ff ff ff       	jmpq   1100 <register_tm_clones>

0000000000001189 <bomb>:
    1189:	f3 0f 1e fa          	endbr64 
    118d:	55                   	push   %rbp
    118e:	48 89 e5             	mov    %rsp,%rbp
    1191:	48 8d 3d 6c 0e 00 00 	lea    0xe6c(%rip),%rdi        # 2004 <_IO_stdin_used+0x4>
    1198:	e8 d3 fe ff ff       	callq  1070 <puts@plt>
    119d:	90                   	nop
    119e:	5d                   	pop    %rbp
    119f:	c3                   	retq   

00000000000011a0 <fun>:
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	55                   	push   %rbp
    11a5:	48 89 e5             	mov    %rsp,%rbp
    11a8:	48 83 ec 20          	sub    $0x20,%rsp
    11ac:	89 7d ec             	mov    %edi,-0x14(%rbp)
    11af:	89 75 e8             	mov    %esi,-0x18(%rbp)
    11b2:	89 55 e4             	mov    %edx,-0x1c(%rbp)
    11b5:	8b 45 ec             	mov    -0x14(%rbp),%eax
    11b8:	2b 45 e8             	sub    -0x18(%rbp),%eax
    11bb:	89 45 f8             	mov    %eax,-0x8(%rbp)
    11be:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    11c5:	d1 7d f8             	sarl   -0x8(%rbp)
    11c8:	8b 55 f8             	mov    -0x8(%rbp),%edx
    11cb:	8b 45 e8             	mov    -0x18(%rbp),%eax
    11ce:	01 d0                	add    %edx,%eax
    11d0:	89 45 fc             	mov    %eax,-0x4(%rbp)
    11d3:	8b 45 fc             	mov    -0x4(%rbp),%eax
    11d6:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    11d9:	7f 3f                	jg     121a <fun+0x7a>
    11db:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    11e2:	8b 45 fc             	mov    -0x4(%rbp),%eax
    11e5:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    11e8:	7c 05                	jl     11ef <fun+0x4f>
    11ea:	8b 45 f8             	mov    -0x8(%rbp),%eax
    11ed:	eb 4c                	jmp    123b <fun+0x9b>
    11ef:	8b 45 fc             	mov    -0x4(%rbp),%eax
    11f2:	83 c0 01             	add    $0x1,%eax
    11f5:	89 45 e8             	mov    %eax,-0x18(%rbp)
    11f8:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    11fb:	8b 4d e8             	mov    -0x18(%rbp),%ecx
    11fe:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1201:	89 ce                	mov    %ecx,%esi
    1203:	89 c7                	mov    %eax,%edi
    1205:	e8 96 ff ff ff       	callq  11a0 <fun>
    120a:	8b 45 f8             	mov    -0x8(%rbp),%eax
    120d:	01 c0                	add    %eax,%eax
    120f:	83 c0 01             	add    $0x1,%eax
    1212:	89 45 f8             	mov    %eax,-0x8(%rbp)
    1215:	8b 45 f8             	mov    -0x8(%rbp),%eax
    1218:	eb 21                	jmp    123b <fun+0x9b>
    121a:	8b 45 fc             	mov    -0x4(%rbp),%eax
    121d:	83 e8 01             	sub    $0x1,%eax
    1220:	89 45 ec             	mov    %eax,-0x14(%rbp)
    1223:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    1226:	8b 4d e8             	mov    -0x18(%rbp),%ecx
    1229:	8b 45 ec             	mov    -0x14(%rbp),%eax
    122c:	89 ce                	mov    %ecx,%esi
    122e:	89 c7                	mov    %eax,%edi
    1230:	e8 6b ff ff ff       	callq  11a0 <fun>
    1235:	d1 65 f8             	shll   -0x8(%rbp)
    1238:	8b 45 f8             	mov    -0x8(%rbp),%eax
    123b:	c9                   	leaveq 
    123c:	c3                   	retq   

000000000000123d <main>:
    123d:	f3 0f 1e fa          	endbr64 
    1241:	55                   	push   %rbp
    1242:	48 89 e5             	mov    %rsp,%rbp
    1245:	48 83 ec 20          	sub    $0x20,%rsp
    1249:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1250:	00 00 
    1252:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1256:	31 c0                	xor    %eax,%eax
    1258:	48 8d 3d be 0d 00 00 	lea    0xdbe(%rip),%rdi        # 201d <_IO_stdin_used+0x1d>
    125f:	e8 0c fe ff ff       	callq  1070 <puts@plt>
    1264:	48 8d 45 ec          	lea    -0x14(%rbp),%rax
    1268:	48 89 c6             	mov    %rax,%rsi
    126b:	48 8d 3d bf 0d 00 00 	lea    0xdbf(%rip),%rdi        # 2031 <_IO_stdin_used+0x31>
    1272:	b8 00 00 00 00       	mov    $0x0,%eax
    1277:	e8 14 fe ff ff       	callq  1090 <__isoc99_scanf@plt>
    127c:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    1283:	eb 77                	jmp    12fc <main+0xbf>
    1285:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    1289:	48 8d 45 e4          	lea    -0x1c(%rbp),%rax
    128d:	48 89 c6             	mov    %rax,%rsi
    1290:	48 8d 3d 9d 0d 00 00 	lea    0xd9d(%rip),%rdi        # 2034 <_IO_stdin_used+0x34>
    1297:	b8 00 00 00 00       	mov    $0x0,%eax
    129c:	e8 ef fd ff ff       	callq  1090 <__isoc99_scanf@plt>
    12a1:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    12a4:	85 c0                	test   %eax,%eax
    12a6:	78 50                	js     12f8 <main+0xbb>
    12a8:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    12ab:	83 f8 0e             	cmp    $0xe,%eax
    12ae:	7f 48                	jg     12f8 <main+0xbb>
    12b0:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    12b3:	89 c2                	mov    %eax,%edx
    12b5:	be 00 00 00 00       	mov    $0x0,%esi
    12ba:	bf 0e 00 00 00       	mov    $0xe,%edi
    12bf:	e8 dc fe ff ff       	callq  11a0 <fun>
    12c4:	89 45 f4             	mov    %eax,-0xc(%rbp)
    12c7:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
    12cb:	74 0c                	je     12d9 <main+0x9c>
    12cd:	b8 00 00 00 00       	mov    $0x0,%eax
    12d2:	e8 b2 fe ff ff       	callq  1189 <bomb>
    12d7:	eb 1f                	jmp    12f8 <main+0xbb>
    12d9:	8b 45 e8             	mov    -0x18(%rbp),%eax
    12dc:	85 c0                	test   %eax,%eax
    12de:	75 0e                	jne    12ee <main+0xb1>
    12e0:	48 8d 3d 53 0d 00 00 	lea    0xd53(%rip),%rdi        # 203a <_IO_stdin_used+0x3a>
    12e7:	e8 84 fd ff ff       	callq  1070 <puts@plt>
    12ec:	eb 0a                	jmp    12f8 <main+0xbb>
    12ee:	b8 00 00 00 00       	mov    $0x0,%eax
    12f3:	e8 91 fe ff ff       	callq  1189 <bomb>
    12f8:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
    12fc:	8b 45 ec             	mov    -0x14(%rbp),%eax
    12ff:	39 45 f0             	cmp    %eax,-0x10(%rbp)
    1302:	7c 81                	jl     1285 <main+0x48>
    1304:	b8 00 00 00 00       	mov    $0x0,%eax
    1309:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    130d:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    1314:	00 00 
    1316:	74 05                	je     131d <main+0xe0>
    1318:	e8 63 fd ff ff       	callq  1080 <__stack_chk_fail@plt>
    131d:	c9                   	leaveq 
    131e:	c3                   	retq   
    131f:	90                   	nop

0000000000001320 <__libc_csu_init>:
    1320:	f3 0f 1e fa          	endbr64 
    1324:	41 57                	push   %r15
    1326:	4c 8d 3d 7b 2a 00 00 	lea    0x2a7b(%rip),%r15        # 3da8 <__frame_dummy_init_array_entry>
    132d:	41 56                	push   %r14
    132f:	49 89 d6             	mov    %rdx,%r14
    1332:	41 55                	push   %r13
    1334:	49 89 f5             	mov    %rsi,%r13
    1337:	41 54                	push   %r12
    1339:	41 89 fc             	mov    %edi,%r12d
    133c:	55                   	push   %rbp
    133d:	48 8d 2d 6c 2a 00 00 	lea    0x2a6c(%rip),%rbp        # 3db0 <__do_global_dtors_aux_fini_array_entry>
    1344:	53                   	push   %rbx
    1345:	4c 29 fd             	sub    %r15,%rbp
    1348:	48 83 ec 08          	sub    $0x8,%rsp
    134c:	e8 af fc ff ff       	callq  1000 <_init>
    1351:	48 c1 fd 03          	sar    $0x3,%rbp
    1355:	74 1f                	je     1376 <__libc_csu_init+0x56>
    1357:	31 db                	xor    %ebx,%ebx
    1359:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1360:	4c 89 f2             	mov    %r14,%rdx
    1363:	4c 89 ee             	mov    %r13,%rsi
    1366:	44 89 e7             	mov    %r12d,%edi
    1369:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    136d:	48 83 c3 01          	add    $0x1,%rbx
    1371:	48 39 dd             	cmp    %rbx,%rbp
    1374:	75 ea                	jne    1360 <__libc_csu_init+0x40>
    1376:	48 83 c4 08          	add    $0x8,%rsp
    137a:	5b                   	pop    %rbx
    137b:	5d                   	pop    %rbp
    137c:	41 5c                	pop    %r12
    137e:	41 5d                	pop    %r13
    1380:	41 5e                	pop    %r14
    1382:	41 5f                	pop    %r15
    1384:	c3                   	retq   
    1385:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    138c:	00 00 00 00 

0000000000001390 <__libc_csu_fini>:
    1390:	f3 0f 1e fa          	endbr64 
    1394:	c3                   	retq   

Disassembly of section .fini:

0000000000001398 <_fini>:
    1398:	f3 0f 1e fa          	endbr64 
    139c:	48 83 ec 08          	sub    $0x8,%rsp
    13a0:	48 83 c4 08          	add    $0x8,%rsp
    13a4:	c3                   	retq   
_______________________________________________________________

phase_4:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 8a 2f 00 00    	pushq  0x2f8a(%rip)        # 3fb0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 8b 2f 00 00 	bnd jmpq *0x2f8b(%rip)        # 3fb8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	pushq  $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmpq 1020 <.plt>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	pushq  $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmpq 1020 <.plt>
    105f:	90                   	nop

Disassembly of section .plt.got:

0000000000001060 <__cxa_finalize@plt>:
    1060:	f3 0f 1e fa          	endbr64 
    1064:	f2 ff 25 8d 2f 00 00 	bnd jmpq *0x2f8d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    106b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001070 <puts@plt>:
    1070:	f3 0f 1e fa          	endbr64 
    1074:	f2 ff 25 45 2f 00 00 	bnd jmpq *0x2f45(%rip)        # 3fc0 <puts@GLIBC_2.2.5>
    107b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001080 <__stack_chk_fail@plt>:
    1080:	f3 0f 1e fa          	endbr64 
    1084:	f2 ff 25 3d 2f 00 00 	bnd jmpq *0x2f3d(%rip)        # 3fc8 <__stack_chk_fail@GLIBC_2.4>
    108b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001090 <__isoc99_scanf@plt>:
    1090:	f3 0f 1e fa          	endbr64 
    1094:	f2 ff 25 35 2f 00 00 	bnd jmpq *0x2f35(%rip)        # 3fd0 <__isoc99_scanf@GLIBC_2.7>
    109b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

00000000000010a0 <_start>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	31 ed                	xor    %ebp,%ebp
    10a6:	49 89 d1             	mov    %rdx,%r9
    10a9:	5e                   	pop    %rsi
    10aa:	48 89 e2             	mov    %rsp,%rdx
    10ad:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    10b1:	50                   	push   %rax
    10b2:	54                   	push   %rsp
    10b3:	4c 8d 05 f6 02 00 00 	lea    0x2f6(%rip),%r8        # 13b0 <__libc_csu_fini>
    10ba:	48 8d 0d 7f 02 00 00 	lea    0x27f(%rip),%rcx        # 1340 <__libc_csu_init>
    10c1:	48 8d 3d 7b 01 00 00 	lea    0x17b(%rip),%rdi        # 1243 <main>
    10c8:	ff 15 12 2f 00 00    	callq  *0x2f12(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    10ce:	f4                   	hlt    
    10cf:	90                   	nop

00000000000010d0 <deregister_tm_clones>:
    10d0:	48 8d 3d 39 2f 00 00 	lea    0x2f39(%rip),%rdi        # 4010 <__TMC_END__>
    10d7:	48 8d 05 32 2f 00 00 	lea    0x2f32(%rip),%rax        # 4010 <__TMC_END__>
    10de:	48 39 f8             	cmp    %rdi,%rax
    10e1:	74 15                	je     10f8 <deregister_tm_clones+0x28>
    10e3:	48 8b 05 ee 2e 00 00 	mov    0x2eee(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    10ea:	48 85 c0             	test   %rax,%rax
    10ed:	74 09                	je     10f8 <deregister_tm_clones+0x28>
    10ef:	ff e0                	jmpq   *%rax
    10f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10f8:	c3                   	retq   
    10f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001100 <register_tm_clones>:
    1100:	48 8d 3d 09 2f 00 00 	lea    0x2f09(%rip),%rdi        # 4010 <__TMC_END__>
    1107:	48 8d 35 02 2f 00 00 	lea    0x2f02(%rip),%rsi        # 4010 <__TMC_END__>
    110e:	48 29 fe             	sub    %rdi,%rsi
    1111:	48 89 f0             	mov    %rsi,%rax
    1114:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1118:	48 c1 f8 03          	sar    $0x3,%rax
    111c:	48 01 c6             	add    %rax,%rsi
    111f:	48 d1 fe             	sar    %rsi
    1122:	74 14                	je     1138 <register_tm_clones+0x38>
    1124:	48 8b 05 c5 2e 00 00 	mov    0x2ec5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    112b:	48 85 c0             	test   %rax,%rax
    112e:	74 08                	je     1138 <register_tm_clones+0x38>
    1130:	ff e0                	jmpq   *%rax
    1132:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1138:	c3                   	retq   
    1139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001140 <__do_global_dtors_aux>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	80 3d c5 2e 00 00 00 	cmpb   $0x0,0x2ec5(%rip)        # 4010 <__TMC_END__>
    114b:	75 2b                	jne    1178 <__do_global_dtors_aux+0x38>
    114d:	55                   	push   %rbp
    114e:	48 83 3d a2 2e 00 00 	cmpq   $0x0,0x2ea2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1155:	00 
    1156:	48 89 e5             	mov    %rsp,%rbp
    1159:	74 0c                	je     1167 <__do_global_dtors_aux+0x27>
    115b:	48 8b 3d a6 2e 00 00 	mov    0x2ea6(%rip),%rdi        # 4008 <__dso_handle>
    1162:	e8 f9 fe ff ff       	callq  1060 <__cxa_finalize@plt>
    1167:	e8 64 ff ff ff       	callq  10d0 <deregister_tm_clones>
    116c:	c6 05 9d 2e 00 00 01 	movb   $0x1,0x2e9d(%rip)        # 4010 <__TMC_END__>
    1173:	5d                   	pop    %rbp
    1174:	c3                   	retq   
    1175:	0f 1f 00             	nopl   (%rax)
    1178:	c3                   	retq   
    1179:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001180 <frame_dummy>:
    1180:	f3 0f 1e fa          	endbr64 
    1184:	e9 77 ff ff ff       	jmpq   1100 <register_tm_clones>

0000000000001189 <bomb>:
    1189:	f3 0f 1e fa          	endbr64 
    118d:	55                   	push   %rbp
    118e:	48 89 e5             	mov    %rsp,%rbp
    1191:	48 8d 3d 6c 0e 00 00 	lea    0xe6c(%rip),%rdi        # 2004 <_IO_stdin_used+0x4>
    1198:	e8 d3 fe ff ff       	callq  1070 <puts@plt>
    119d:	90                   	nop
    119e:	5d                   	pop    %rbp
    119f:	c3                   	retq   

00000000000011a0 <fun>:
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	55                   	push   %rbp
    11a5:	48 89 e5             	mov    %rsp,%rbp
    11a8:	48 83 ec 20          	sub    $0x20,%rsp
    11ac:	89 7d ec             	mov    %edi,-0x14(%rbp)
    11af:	89 75 e8             	mov    %esi,-0x18(%rbp)
    11b2:	89 55 e4             	mov    %edx,-0x1c(%rbp)
    11b5:	8b 45 ec             	mov    -0x14(%rbp),%eax
    11b8:	2b 45 e8             	sub    -0x18(%rbp),%eax
    11bb:	89 45 f8             	mov    %eax,-0x8(%rbp)
    11be:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    11c5:	d1 7d f8             	sarl   -0x8(%rbp)
    11c8:	8b 55 f8             	mov    -0x8(%rbp),%edx
    11cb:	8b 45 e8             	mov    -0x18(%rbp),%eax
    11ce:	01 d0                	add    %edx,%eax
    11d0:	89 45 fc             	mov    %eax,-0x4(%rbp)
    11d3:	8b 45 fc             	mov    -0x4(%rbp),%eax
    11d6:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    11d9:	7f 42                	jg     121d <fun+0x7d>
    11db:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    11e2:	8b 45 fc             	mov    -0x4(%rbp),%eax
    11e5:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    11e8:	7c 05                	jl     11ef <fun+0x4f>
    11ea:	8b 45 f8             	mov    -0x8(%rbp),%eax
    11ed:	eb 52                	jmp    1241 <fun+0xa1>
    11ef:	8b 45 fc             	mov    -0x4(%rbp),%eax
    11f2:	83 c0 01             	add    $0x1,%eax
    11f5:	89 45 e8             	mov    %eax,-0x18(%rbp)
    11f8:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    11fb:	8b 4d e8             	mov    -0x18(%rbp),%ecx
    11fe:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1201:	89 ce                	mov    %ecx,%esi
    1203:	89 c7                	mov    %eax,%edi
    1205:	e8 96 ff ff ff       	callq  11a0 <fun>
    120a:	89 45 f8             	mov    %eax,-0x8(%rbp)
    120d:	8b 45 f8             	mov    -0x8(%rbp),%eax
    1210:	01 c0                	add    %eax,%eax
    1212:	83 c0 01             	add    $0x1,%eax
    1215:	89 45 f8             	mov    %eax,-0x8(%rbp)
    1218:	8b 45 f8             	mov    -0x8(%rbp),%eax
    121b:	eb 24                	jmp    1241 <fun+0xa1>
    121d:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1220:	83 e8 01             	sub    $0x1,%eax
    1223:	89 45 ec             	mov    %eax,-0x14(%rbp)
    1226:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    1229:	8b 4d e8             	mov    -0x18(%rbp),%ecx
    122c:	8b 45 ec             	mov    -0x14(%rbp),%eax
    122f:	89 ce                	mov    %ecx,%esi
    1231:	89 c7                	mov    %eax,%edi
    1233:	e8 68 ff ff ff       	callq  11a0 <fun>
    1238:	89 45 f8             	mov    %eax,-0x8(%rbp)
    123b:	d1 65 f8             	shll   -0x8(%rbp)
    123e:	8b 45 f8             	mov    -0x8(%rbp),%eax
    1241:	c9                   	leaveq 
    1242:	c3                   	retq   

0000000000001243 <main>:
    1243:	f3 0f 1e fa          	endbr64 
    1247:	55                   	push   %rbp
    1248:	48 89 e5             	mov    %rsp,%rbp
    124b:	48 83 ec 20          	sub    $0x20,%rsp
    124f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1256:	00 00 
    1258:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    125c:	31 c0                	xor    %eax,%eax
    125e:	48 8d 3d b8 0d 00 00 	lea    0xdb8(%rip),%rdi        # 201d <_IO_stdin_used+0x1d>
    1265:	e8 06 fe ff ff       	callq  1070 <puts@plt>
    126a:	48 8d 45 ec          	lea    -0x14(%rbp),%rax
    126e:	48 89 c6             	mov    %rax,%rsi
    1271:	48 8d 3d b9 0d 00 00 	lea    0xdb9(%rip),%rdi        # 2031 <_IO_stdin_used+0x31>
    1278:	b8 00 00 00 00       	mov    $0x0,%eax
    127d:	e8 0e fe ff ff       	callq  1090 <__isoc99_scanf@plt>
    1282:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    1289:	e9 83 00 00 00       	jmpq   1311 <main+0xce>
    128e:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    1292:	48 8d 45 e4          	lea    -0x1c(%rbp),%rax
    1296:	48 89 c6             	mov    %rax,%rsi
    1299:	48 8d 3d 94 0d 00 00 	lea    0xd94(%rip),%rdi        # 2034 <_IO_stdin_used+0x34>
    12a0:	b8 00 00 00 00       	mov    $0x0,%eax
    12a5:	e8 e6 fd ff ff       	callq  1090 <__isoc99_scanf@plt>
    12aa:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    12ad:	85 c0                	test   %eax,%eax
    12af:	78 52                	js     1303 <main+0xc0>
    12b1:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    12b4:	83 f8 0e             	cmp    $0xe,%eax
    12b7:	7f 4a                	jg     1303 <main+0xc0>
    12b9:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    12bc:	89 c2                	mov    %eax,%edx
    12be:	be 00 00 00 00       	mov    $0x0,%esi
    12c3:	bf 0e 00 00 00       	mov    $0xe,%edi
    12c8:	e8 d3 fe ff ff       	callq  11a0 <fun>
    12cd:	89 45 f4             	mov    %eax,-0xc(%rbp)
    12d0:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
    12d4:	74 0c                	je     12e2 <main+0x9f>
    12d6:	b8 00 00 00 00       	mov    $0x0,%eax
    12db:	e8 a9 fe ff ff       	callq  1189 <bomb>
    12e0:	eb 2b                	jmp    130d <main+0xca>
    12e2:	8b 45 e8             	mov    -0x18(%rbp),%eax
    12e5:	85 c0                	test   %eax,%eax
    12e7:	75 0e                	jne    12f7 <main+0xb4>
    12e9:	48 8d 3d 4a 0d 00 00 	lea    0xd4a(%rip),%rdi        # 203a <_IO_stdin_used+0x3a>
    12f0:	e8 7b fd ff ff       	callq  1070 <puts@plt>
    12f5:	eb 16                	jmp    130d <main+0xca>
    12f7:	b8 00 00 00 00       	mov    $0x0,%eax
    12fc:	e8 88 fe ff ff       	callq  1189 <bomb>
    1301:	eb 0a                	jmp    130d <main+0xca>
    1303:	b8 00 00 00 00       	mov    $0x0,%eax
    1308:	e8 7c fe ff ff       	callq  1189 <bomb>
    130d:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
    1311:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1314:	39 45 f0             	cmp    %eax,-0x10(%rbp)
    1317:	0f 8c 71 ff ff ff    	jl     128e <main+0x4b>
    131d:	b8 00 00 00 00       	mov    $0x0,%eax
    1322:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    1326:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    132d:	00 00 
    132f:	74 05                	je     1336 <main+0xf3>
    1331:	e8 4a fd ff ff       	callq  1080 <__stack_chk_fail@plt>
    1336:	c9                   	leaveq 
    1337:	c3                   	retq   
    1338:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    133f:	00 

0000000000001340 <__libc_csu_init>:
    1340:	f3 0f 1e fa          	endbr64 
    1344:	41 57                	push   %r15
    1346:	4c 8d 3d 5b 2a 00 00 	lea    0x2a5b(%rip),%r15        # 3da8 <__frame_dummy_init_array_entry>
    134d:	41 56                	push   %r14
    134f:	49 89 d6             	mov    %rdx,%r14
    1352:	41 55                	push   %r13
    1354:	49 89 f5             	mov    %rsi,%r13
    1357:	41 54                	push   %r12
    1359:	41 89 fc             	mov    %edi,%r12d
    135c:	55                   	push   %rbp
    135d:	48 8d 2d 4c 2a 00 00 	lea    0x2a4c(%rip),%rbp        # 3db0 <__do_global_dtors_aux_fini_array_entry>
    1364:	53                   	push   %rbx
    1365:	4c 29 fd             	sub    %r15,%rbp
    1368:	48 83 ec 08          	sub    $0x8,%rsp
    136c:	e8 8f fc ff ff       	callq  1000 <_init>
    1371:	48 c1 fd 03          	sar    $0x3,%rbp
    1375:	74 1f                	je     1396 <__libc_csu_init+0x56>
    1377:	31 db                	xor    %ebx,%ebx
    1379:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1380:	4c 89 f2             	mov    %r14,%rdx
    1383:	4c 89 ee             	mov    %r13,%rsi
    1386:	44 89 e7             	mov    %r12d,%edi
    1389:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    138d:	48 83 c3 01          	add    $0x1,%rbx
    1391:	48 39 dd             	cmp    %rbx,%rbp
    1394:	75 ea                	jne    1380 <__libc_csu_init+0x40>
    1396:	48 83 c4 08          	add    $0x8,%rsp
    139a:	5b                   	pop    %rbx
    139b:	5d                   	pop    %rbp
    139c:	41 5c                	pop    %r12
    139e:	41 5d                	pop    %r13
    13a0:	41 5e                	pop    %r14
    13a2:	41 5f                	pop    %r15
    13a4:	c3                   	retq   
    13a5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    13ac:	00 00 00 00 

00000000000013b0 <__libc_csu_fini>:
    13b0:	f3 0f 1e fa          	endbr64 
    13b4:	c3                   	retq   

Disassembly of section .fini:

00000000000013b8 <_fini>:
    13b8:	f3 0f 1e fa          	endbr64 
    13bc:	48 83 ec 08          	sub    $0x8,%rsp
    13c0:	48 83 c4 08          	add    $0x8,%rsp
    13c4:	c3                   	retq   
_______________________________________________________________
